name: Backport PR Creator

on:
  pull_request:
    types:
      - closed
      - labeled

permissions:
  contents: read
  id-token: write

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR has a label containing the word backport, exit if not
        run: |
          LABELS=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH")
          echo "$LABELS" | grep -iq "backport" || exit 0

      - name: Check if PR comes from a fork, comment and exit if that's the case
        run: |
          IS_FORK=$(jq -r '.pull_request.head.repo.fork' "$GITHUB_EVENT_PATH")
          if [[ "$IS_FORK" == "true" ]]; then
            COMMENT=":warning: This PR comes from a fork and cannot be backported automatically. Please ask a Mimir maintainer for assistance."
            gh pr comment "${{ github.repository }}#${{ github.event.pull_request.number }}" --body "$COMMENT"
            exit 0
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve GitHub App credentials from Vault
        id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@get-vault-secrets-v1.0.1
        with:
          repo_secrets: |
            APP_ID=mimir-github-bot:app_id
            PRIVATE_KEY=mimir-github-bot:private_key

      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ env.APP_ID }}
          private-key: ${{ env.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout Actions
        uses: actions/checkout@v4
        with:
          repository: "grafana/grafana-github-actions"
          path: ./actions
          # pin the version to before https://github.com/grafana/grafana-github-actions/pull/113 because
          # we don't want to have the same strict rules for PR labels
          ref: d284afd314ca3625c23595e9f62b52d215ead7ce

      - name: Install Actions
        run: npm install --production --prefix ./actions

      - name: Run backport
        uses: ./actions/backport
        with:
          token: ${{ steps.app-token.outputs.token }}
          labelsToAdd: "backport"
          title: "[{{base}}] {{originalTitle}}"
