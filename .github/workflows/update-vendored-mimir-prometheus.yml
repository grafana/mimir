name: Update mimir-prometheus dependency

on:
  workflow_dispatch:
    inputs:
      mimir_branch:
        description: 'Mimir branch to update'
        required: true
        default: 'main'
        type: string
      mimir_prometheus_branch:
        description: 'mimir-prometheus branch/commit to update to'
        required: true
        default: 'main'
        type: string

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  update-mimir-prometheus:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.mimir_branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          set-safe-directory: '*'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          # We only use this to run `go mod` commands, so it doesn't need to follow the version used in the Dockerfile.
          go-version: "1.24.2"

      - name: Get current mimir-prometheus version
        id: get-current-version
        run: |
          # Get current mimir-prometheus version from go.mod
          CURRENT_VERSION=$(go mod edit -json | jq -r '.Replace[] | select(.New.Path == "github.com/grafana/mimir-prometheus") | .New.Version | .[-12:]')
          if [ -z "$CURRENT_VERSION" ] || [ "$CURRENT_VERSION" = "null" ]; then
            echo "No current mimir-prometheus version found in go.mod"
            CURRENT_VERSION=""
          fi
          
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current mimir-prometheus version: $CURRENT_VERSION"

      # This job uses "mimir-vendoring bot" instead of "github-actions bot" (secrets.GITHUB_TOKEN)
      # because any events triggered by the later don't spawn GitHub actions.
      # Refer to https://docs.github.com/en/actions/security-for-github-actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
      - name: Retrieve GitHub App Credentials from Vault
        id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@5d7e361bc7e0a183cde8afe9899fb7b596d2659b # get-vault-secrets-v1.2.0
        with:
          repo_secrets: |
            APP_ID=mimir-vendoring:app-id
            PRIVATE_KEY=mimir-vendoring:app-pem-key

      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          # Variables generated by the previous step get-secrets
          app-id: ${{ env.APP_ID }}
          private-key: ${{ env.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Get mimir-prometheus commit info
        id: get-commit-info
        env:
          MIMIR_PROMETHEUS_BRANCH: ${{ inputs.mimir_prometheus_branch }}
        run: |
          # Fetch the latest commit hash from the specified branch
          COMMIT_HASH=$(git ls-remote https://github.com/grafana/mimir-prometheus.git "${MIMIR_PROMETHEUS_BRANCH}" | cut -f1)
          if [ -z "$COMMIT_HASH" ]; then
            echo "Error: Could not find commit hash for branch/ref ${MIMIR_PROMETHEUS_BRANCH}"
            exit 1
          fi
          
          # Get short commit hash for display
          SHORT_HASH=${COMMIT_HASH:0:12}
          
          # Create timestamp for branch naming so that multiple runs don't clobber each other
          TIMESTAMP=$(date +%Y%m%d%H%M)
          
          echo "commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
          echo "short_hash=$SHORT_HASH" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          
          echo "Found commit: $COMMIT_HASH"

      - name: Update go.mod
        run: |
          # Update the replace directive in go.mod using go mod edit with commit hash
          go mod edit -replace=github.com/prometheus/prometheus=github.com/grafana/mimir-prometheus@${{ steps.get-commit-info.outputs.commit_hash }}
          
          echo "Updated go.mod with new mimir-prometheus commit: ${{ steps.get-commit-info.outputs.commit_hash }}"

      - name: Update dependencies
        run: |
          echo "Tidying go.mod and updating vendor directory..."
          go mod tidy
          go mod vendor
          
          echo "Dependencies updated successfully"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@4e1beaa7521e8b457b572c090b25bd3db56bf1c5 # v5.0.3
        with:
          token: ${{ steps.app-token.outputs.token }}
          title: Update mimir-prometheus to ${{ steps.get-commit-info.outputs.short_hash }}
          body: |
            ## Update mimir-prometheus dependency

            *This PR was automatically created by the [update-mimir-prometheus workflow](https://github.com/grafana/mimir/blob/main/.github/workflows/update-mimir-prometheus.yml)*

            ### Details:
            - **Source branch/ref**: ${{ format('[`{0}`](https://github.com/grafana/mimir-prometheus/tree/{0})', inputs.mimir_prometheus_branch) }}
            - **Previous commit**: ${{ format('[`{0}`](https://github.com/grafana/mimir-prometheus/commit/{0})', steps.get-current-version.outputs.current_version) }}
            - **New commit**: ${{ format('[`{0}`](https://github.com/grafana/mimir-prometheus/commit/{0})', steps.get-commit-info.outputs.commit_hash) }}
            - **Changes**: ${{ format('[`{0}...{1}`](https://github.com/grafana/mimir-prometheus/compare/{0}...{1})', steps.get-current-version.outputs.current_version, steps.get-commit-info.outputs.commit_hash) }}
          commit-message: Update mimir-prometheus to `${{ steps.get-commit-info.outputs.short_hash }}`
          branch: bot/${{ inputs.mimir_branch }}/update-mimir-prometheus-${{ steps.get-commit-info.outputs.short_hash }}-${{ steps.get-commit-info.outputs.timestamp }}
          base: ${{ inputs.mimir_branch }}
          delete-branch: true
