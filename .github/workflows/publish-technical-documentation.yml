name: "publish-technical-documentation"

on:
  push:
    branches:
    - "main"
    - "release-*"
    tags:
    - "mimir-[0-9]+.[0-9]+.[0-9]+"
    paths:
    - "docs/sources/**"
jobs:
  test:
    runs-on: "ubuntu-latest"
    steps:
    - name: "Check out code"
      uses: "actions/checkout@v3"
    - name: "Build website"
      run: |
        docker run -v ${PWD}/docs/sources:/hugo/content/docs/mimir/latest -e HUGO_REFLINKSERRORLEVEL=ERROR --rm grafana/docs-base:latest /bin/bash -c 'make hugo'

  sync:
    runs-on: "ubuntu-latest"
    needs: "test"
    steps:

    - name: "Checkout Mimir repo"
      uses: "actions/checkout@v3"
      with:
        fetch-depth: 0

    - name: "Checkout Actions library"
      uses: "actions/checkout@v3"
      with:
        repository: "grafana/grafana-github-actions"
        path: "./actions"

    - name: "Install Actions from library"
      run: "npm install --production --prefix ./actions"

    - name: "Determine technical documentation version"
      uses: "./actions/docs-target"
      id: "target"
      with:
        ref_name: "${{ github.ref_name }}"

    - name: "Determine latest release tag"
      id: "latest-released"
      shell: "bash"
      run: |
        tag="$(git tag --sort=-v:refname | grep -E '^mimir-(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$' | head -n1)"
        echo "::set-output name=tag::${tag}"

    - name: "Determine latest release tag target"
      uses: "./actions/docs-target"
      id: "latest-released-target"
      with:
        ref_name: "${{ steps.latest-released.outputs.tag }}"

    - name: "Clone website-sync Action"
      run: "git clone --single-branch --no-tags --depth 1 -b master https://grafanabot:${{ secrets.GH_BOT_ACCESS_TOKEN }}@github.com/grafana/website-sync ./.github/actions/website-sync"

    - name: "Publish to website repository (next)"
      uses: "./.github/actions/website-sync"
      id: "publish-next"
      # Only publish on main branch.
      if: "github.ref == 'refs/heads/main'"
      with:
        repository: "grafana/website"
        branch: "master"
        host: "github.com"
        github_pat: "${{ secrets.GH_BOT_ACCESS_TOKEN }}"
        source_folder: "docs/sources"
        target_folder: "content/docs/mimir/next"

    - name: "Publish to website repository (release)"
      uses: "./.github/actions/website-sync"
      id: "publish-release"
      # Only publish if the target of the latest release tag matches the target of this reference.
      # For release tags the tag and reference are the same.
      # For release branches, this guard prevents publishing documentation before a tag
      # has been pushed that has officially "released" that documentation.
      if: "steps.latest-released-target.outputs.target == steps.target.outputs.target"
      with:
        repository: "grafana/website"
        branch: "master"
        host: "github.com"
        github_pat: "${{ secrets.GH_BOT_ACCESS_TOKEN }}"
        source_folder: "docs/sources"
        # Append ".x" to target to produce a v<major>.<minor>.x directory.
        target_folder: "content/docs/mimir/${{ steps.target.outputs.target }}.x"
