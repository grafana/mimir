name: Build and Push mimir-build-image

# configure trigger by pull request or manually
on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths:
      - mimir-build-image/Dockerfile  

jobs: 
  build_and_push:
    runs-on: ubuntu-latest
    # If the PR is raised by dependabot, then build the image
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Checkout Pull Request Branch
        run: gh pr checkout ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare Variables
        id: prepare
        run: |
          echo "path=mimir-build-image/Dockerfile" >> $GITHUB_OUTPUT
          echo "image=grafana/mimir-build-image" >> $GITHUB_OUTPUT

      - name: Compute Image Tag
        id: compute_hash
        run: |
          current_hash=$(md5sum ${{ steps.prepare.outputs.path }} | awk '{print $1}')
          echo "the file path is ${{ steps.prepare.outputs.path }}"
          echo "build tag is $current_hash"
          tag="${{ github.event.pull_request.number }}_$current_hash"
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Check Should Build Image
        id: check_build
        run: |
          echo "Checking if image should be built"
          image="docker.io/${{ steps.prepare.outputs.image }}:${{ steps.compute_hash.outputs.tag }}"
          if skopeo inspect --raw "docker://$image" >/dev/null 2>&1; then
            echo "build=false" >> $GITHUB_OUTPUT
            echo "Tag exists"
          else
            echo "Tag does not exist"
            echo "build=true" >> $GITHUB_OUTPUT
          fi

      - name: Add Comment to the PR
        id: notification
        run: | 
          if [[${{ steps.check_build.outputs.build == 'true' }}]]; then
            gh pr comment $PR_URL --body "**This PR triggers the build of the mimir-build-image**
            image would be auto built and pushed to docker hub, a commit would be added to PR with new image version."
          else
            echo "This PR will not trigger a build of the mimir-build-image"
            gh pr comment $PR_URL --body "**This PR would not trigger the build of the mimir-build-image**
            the tag is already exist."
          fi
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build and Push Docker Image
        if: steps.check_build.outputs.build == 'true'
        run: |
          echo "Building and Pushing Docker Image"
          make push-multiarch-build-image IMAGE_TAG=${{ steps.compute_hash.outputs.tag }}
      
      - name: Add commit to PR in order to update Build Image version
        run: |
          echo "Get current Build Image Version"
          main_version=$(echo $(make print-build-image) | cut -d ':' -f 2)
          echo "Current Build Image Version is $main_version"
          echo "Built Image Version is $TAG"
          if [ "$main_version" = "$TAG" ]; then
            echo "Build Image Version is already up to date"
          else
            echo "Build Image Version is not up to date"
            sed -i "s/$main_version/${{ steps.compute_hash.outputs.tag }}/g" Makefile
            git config --global user.email "${{ github.event.pull_request.user.login }}@users.noreply.github.com"
            git config --global user.name "${{ github.event.pull_request.user.login }}"
            git add Makefile
            git commit -m "Update build image version to ${{ steps.compute_hash.outputs.tag }}"
            git push
          fi 
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          TAG: ${{ steps.compute_hash.outputs.tag }}