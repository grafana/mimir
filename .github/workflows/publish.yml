name: "publish_docs"

on:
  push:
    branches:
    - "main"
    - "mimir-*"
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    paths:
    - "docs/sources/**"

jobs:
  test:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out code"
        uses: "actions/checkout@v3"
      - name: "Build website"
        run: |
          docker run -v ${PWD}/sources:/hugo/content/docs/mimir --rm grafana/docs-base:latest /bin/bash -c 'make hugo'
  sync:
    runs-on: "ubuntu-latest"
    needs: "test"
    steps:

    - name: "Checkout Mimir repo"
      uses: "actions/checkout@v3"

    - name: "Checkout Actions library"
      uses: "actions/checkout@v3"
      with:
        repository: "grafana/grafana-github-actions"
        path: "./actions"

    - name: "Install Actions from library"
      run: "npm install --production --prefix ./actions"

    - name: "Determine technical documentation version"
      uses: "./actions/docs-target"
      id: "target"
      with:
        ref_name: "${{ github.ref_name }}"

    - name: "Clone website-sync Action"
      run: "git clone --single-branch --no-tags --depth 1 -b master https://grafanabot:${{ secrets.GH_BOT_ACCESS_TOKEN }}@github.com/grafana/website-sync ./.github/actions/website-sync"

    - name: "Publish to website repository"
      uses: "./.github/actions/website-sync"
      id: "publish"
      with:
        repository: "grafana/website"
        branch: "master"
        host: "github.com"
        github_pat: "${{ secrets.GH_BOT_ACCESS_TOKEN }}"
        source_folder: "docs/sources"
        target_folder: "content/docs/mimir/${{ steps.target.outputs.target }}"
    - shell: "bash"
      run: |
        test -n "${{ steps.publish.outputs.commit_hash }}"
        test -n "${{ steps.publish.outputs.working_directory }}"
