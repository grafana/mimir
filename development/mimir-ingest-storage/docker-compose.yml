"services":
  "grafana":
    "environment":
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
    "image": "grafana/grafana:9.4.3"
    "ports":
      - "3000:3000"
    "volumes":
      - "./config/datasource-mimir.yaml:/etc/grafana/provisioning/datasources/mimir.yaml"
      - "./config/grafana-provisioning.yaml:/etc/grafana/provisioning/dashboards/local.yml"
      - "../../operations/mimir-mixin-compiled/dashboards:/var/lib/grafana/dashboards"
  "grafana-agent":
    "command":
      - "-config.file=/etc/agent-config/grafana-agent.yaml"
      - "-metrics.wal-directory=/tmp"
      - "-server.http.address=127.0.0.1:9091"
    "image": "grafana/agent:v0.37.3"
    "ports":
      - "9091:9091"
    "volumes":
      - "./config:/etc/agent-config"
  "kafka":
    "depends_on":
      - "zookeeper"
    "environment":
      - "KAFKA_BROKER_ID=1"
      - "KAFKA_NUM_PARTITIONS=100"
      - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
      - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,ORBSTACK://kafka.mimir-read-write-mode.orb.local:9091,PLAINTEXT_HOST://localhost:29092"
      - "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,ORBSTACK:PLAINTEXT"
      - "KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT"
      - "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1"
    "healthcheck":
      "interval": "1s"
      "retries": "30"
      "start_period": "1s"
      "test": "nc -z localhost 9092 || exit -1"
      "timeout": "1s"
    "image": "confluentinc/cp-kafka:latest"
    "ports":
      - "29092:29092"
  "memcached":
    "image": "memcached:1.6.19-alpine"
  "mimir-backend-1":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=backend"
      - "-activity-tracker.filepath=/activity/mimir-backend-1"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-backend-1"
    "image": "mimir"
    "ports":
      - "8006:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
  "mimir-backend-2":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=backend"
      - "-activity-tracker.filepath=/activity/mimir-backend-2"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-backend-2"
    "image": "mimir"
    "ports":
      - "8007:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
  "mimir-read-1":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=read"
      - "-activity-tracker.filepath=/activity/mimir-read-1"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-read-1"
    "image": "mimir"
    "ports":
      - "8004:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
  "mimir-read-2":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=read"
      - "-activity-tracker.filepath=/activity/mimir-read-2"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-read-2"
    "image": "mimir"
    "ports":
      - "8005:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
  "mimir-write-zone-a-1":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=write"
      - "-activity-tracker.filepath=/activity/mimir-write-zone-a-1"
      - "-ingester.ring.instance-availability-zone=zone-a"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-write-zone-a-1"
    "image": "mimir"
    "ports":
      - "8001:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
      - ".data-mimir-write-zone-a-1:/data:delegated"
  "mimir-write-zone-a-2":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=write"
      - "-activity-tracker.filepath=/activity/mimir-write-zone-a-2"
      - "-ingester.ring.instance-availability-zone=zone-a"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-write-zone-a-2"
    "image": "mimir"
    "ports":
      - "8002:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
      - ".data-mimir-write-zone-a-2:/data:delegated"
  "mimir-write-zone-a-3":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=write"
      - "-activity-tracker.filepath=/activity/mimir-write-zone-a-3"
      - "-ingester.ring.instance-availability-zone=zone-a"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-write-zone-a-3"
    "image": "mimir"
    "ports":
      - "8003:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
      - ".data-mimir-write-zone-a-3:/data:delegated"
  "mimir-write-zone-b-1":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=write"
      - "-activity-tracker.filepath=/activity/mimir-write-zone-b-1"
      - "-ingester.ring.instance-availability-zone=zone-b"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-write-zone-b-1"
    "image": "mimir"
    "ports":
      - "8011:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
      - ".data-mimir-write-zone-b-1:/data:delegated"
  "mimir-write-zone-b-2":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=write"
      - "-activity-tracker.filepath=/activity/mimir-write-zone-b-2"
      - "-ingester.ring.instance-availability-zone=zone-b"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-write-zone-b-2"
    "image": "mimir"
    "ports":
      - "8012:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
      - ".data-mimir-write-zone-b-2:/data:delegated"
  "mimir-write-zone-b-3":
    "build":
      "context": "."
      "dockerfile": "dev.dockerfile"
    "command":
      - "./mimir"
      - "-config.file=./config/mimir.yaml"
      - "-target=write"
      - "-activity-tracker.filepath=/activity/mimir-write-zone-b-3"
      - "-ingester.ring.instance-availability-zone=zone-b"
    "depends_on":
      "kafka":
        "condition": "service_healthy"
      "minio":
        "condition": "service_started"
    "environment": []
    "hostname": "mimir-write-zone-b-3"
    "image": "mimir"
    "ports":
      - "8013:8080"
    "volumes":
      - "./config:/mimir/config"
      - "./activity:/activity"
      - ".data-mimir-write-zone-b-3:/data:delegated"
  "minio":
    "command":
      - "server"
      - "--console-address"
      - ":9001"
      - "/data"
    "environment":
      - "MINIO_ROOT_USER=mimir"
      - "MINIO_ROOT_PASSWORD=supersecret"
    "image": "minio/minio"
    "ports":
      - "9000:9000"
      - "9001:9001"
    "volumes":
      - ".data-minio:/data:delegated"
  "nginx":
    "environment":
      - "NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx"
      - "DISTRIBUTOR_HOST=mimir-write-1:8080"
      - "ALERT_MANAGER_HOST=mimir-backend-1:8080"
      - "RULER_HOST=mimir-backend-1:8080"
      - "QUERY_FRONTEND_HOST=mimir-read-1:8080"
      - "COMPACTOR_HOST=mimir-backend-1:8080"
    "hostname": "nginx"
    "image": "nginxinc/nginx-unprivileged:1.22-alpine"
    "ports":
      - "8080:8080"
    "volumes":
      - "../common/config:/etc/nginx/templates"
  "zookeeper":
    "environment":
      - "ZOOKEEPER_CLIENT_PORT=2181"
      - "ZOOKEEPER_TICK_TIME=2000"
      - "ZOOKEEPER_AUTOPURGE_SNAPRETAINCOUNT=5"
      - "ZOOKEEPER_AUTOPURGE_PURGEINTERVAL=1"
    "image": "confluentinc/cp-zookeeper:latest"
    "ports":
      - "22181:22181"
"version": "3.4"
