prometheus.scrape "metrics_local_mimir_read_write_mode_mimir_write" {
        targets = concat(
                [{
                        __address__ = "mimir-write-zone-a-1:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-write",
                        namespace   = "mimir-read-write-mode",
                }],
                [{
                        __address__ = "mimir-write-zone-b-1:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-write",
                        namespace   = "mimir-read-write-mode",
                }],
                [{
                        __address__ = "mimir-write-zone-a-2:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-write",
                        namespace   = "mimir-read-write-mode",
                }],
                [{
                        __address__ = "mimir-write-zone-b-2:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-write",
                        namespace   = "mimir-read-write-mode",
                }],
                [{
                        __address__ = "mimir-write-zone-a-3:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-write",
                        namespace   = "mimir-read-write-mode",
                }],
                [{
                        __address__ = "mimir-write-zone-b-3:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-write",
                        namespace   = "mimir-read-write-mode",
                }],
        )
        forward_to      = [prometheus.remote_write.metrics_local.receiver]
        job_name        = "mimir-read-write-mode/mimir-write"
        scrape_interval = "5s"
        scrape_timeout  = "5s"

        enable_protobuf_negotiation = true
        scrape_classic_histograms = true
}

prometheus.scrape "metrics_local_mimir_read_write_mode_mimir_read" {
        targets = concat(
                [{
                        __address__ = "mimir-read-1:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-read",
                        namespace   = "mimir-read-write-mode",
                }],
                [{
                        __address__ = "mimir-read-2:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-read",
                        namespace   = "mimir-read-write-mode",
                }],
        )
        forward_to      = [prometheus.remote_write.metrics_local.receiver]
        job_name        = "mimir-read-write-mode/mimir-read"
        scrape_interval = "5s"
        scrape_timeout  = "5s"

        enable_protobuf_negotiation = true
        scrape_classic_histograms = true
}

prometheus.scrape "metrics_local_mimir_read_write_mode_mimir_backend" {
        targets = concat(
                [{
                        __address__ = "mimir-backend-1:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-backend",
                        namespace   = "mimir-read-write-mode",
                }],
                [{
                        __address__ = "mimir-backend-2:8080",
                        cluster     = "docker-compose",
                        container   = "mimir-backend",
                        namespace   = "mimir-read-write-mode",
                }],
        )
        forward_to      = [prometheus.remote_write.metrics_local.receiver]
        job_name        = "mimir-read-write-mode/mimir-backend"
        scrape_interval = "5s"
        scrape_timeout  = "5s"

        enable_protobuf_negotiation = true
        scrape_classic_histograms = true
}

prometheus.remote_write "metrics_local" {
        endpoint {
                name                   = "local"
                url                    = "http://mimir-write-zone-a-1:8080/api/v1/push"
                send_native_histograms = true

                queue_config { }

                metadata_config { }
        }
}
