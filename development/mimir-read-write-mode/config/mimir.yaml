multitenancy_enabled: false

blocks_storage:
  backend: s3
  s3:
    endpoint:          minio:9000
    bucket_name:       mimir-blocks
    access_key_id:     mimir
    secret_access_key: supersecret
    insecure:          true
  tsdb:
    dir: /data/ingester

  bucket_store:
    index_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211

    chunks_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211

    metadata_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211


memberlist:
  # Use write replicas as seed nodes.
  join_members: [ mimir-write-1, mimir-write-2, mimir-write-3 ]

ruler:
  rule_path: /data/ruler

ruler_storage:
  backend: s3
  s3:
    bucket_name:       mimir-ruler
    endpoint:          minio:9000
    access_key_id:     mimir
    secret_access_key: supersecret
    insecure:          true

frontend:
  # Currently we can't specify multiple addresses, so we're just using a single replica for the query-scheduler.
  # See: https://github.com/grafana/mimir/issues/2012
  scheduler_address: "mimir-backend-1:9006"

frontend_worker:
  # Currently we can't specify multiple addresses, so we're just using a single replica for the query-scheduler.
  # See: https://github.com/grafana/mimir/issues/2012
  scheduler_address: "mimir-backend-1:9006"

runtime_config:
  file: ./config/runtime.yaml
