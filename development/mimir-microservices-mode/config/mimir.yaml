multitenancy_enabled: false

distributor:
  pool:
    health_check_ingesters: true
  ring:
    kvstore:
      store: consul
      consul:
        host: consul:8500

ingester_client:
  grpc_client_config:
    # Configure the client to allow messages up to 100MB.
    max_recv_msg_size: 104857600
    max_send_msg_size: 104857600
    grpc_compression: gzip

ingester:
  ring:
    # We want to start immediately.
    final_sleep: 0s
    num_tokens: 512
    kvstore:
      store: consul
      consul:
        host: consul:8500
    replication_factor: 1

# These memberlist options will be only used if memberlist is activated via CLI option.
memberlist:
  join_members:
    - distributor-1:10000
  rejoin_interval: 10s

blocks_storage:
  backend: s3

  tsdb:
    dir: /tmp/mimir-tsdb-ingester
    ship_interval: 1m
    block_ranges_period: [ 2h ]
    retention_period: 3h

  bucket_store:
    sync_dir: /tmp/mimir-tsdb-querier
    consistency_delay: 5s
    index_header_lazy_loading_enabled: true

    index_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211

    chunks_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211

    metadata_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211

  s3:
    endpoint:          minio:9000
    bucket_name:       mimir-tsdb
    access_key_id:     mimir
    secret_access_key: supersecret
    insecure:          true

ruler:
  ring:
    heartbeat_period:   5s
    heartbeat_timeout:  15s
    kvstore:
      store: consul
      consul:
        host: consul:8500

  alertmanager_url: http://alertmanager-1:8031/alertmanager,http://alertmanager-2:8032/alertmanager,http://alertmanager-3:8033/alertmanager

ruler_storage:
  backend: s3
  s3:
    bucket_name:       mimir-ruler
    endpoint:          minio:9000
    access_key_id:     mimir
    secret_access_key: supersecret
    insecure:          true

alertmanager:
  fallback_config_file: './config/alertmanager.yaml'
  sharding_ring:
    replication_factor: 3
    heartbeat_period: 5s
    heartbeat_timeout: 15s
    kvstore:
      store: consul
      consul:
        host: consul:8500

alertmanager_storage:
  backend: s3
  s3:
    bucket_name:       mimir-alertmanager
    endpoint:          minio:9000
    access_key_id:     mimir
    secret_access_key: supersecret
    insecure:          true

compactor:
  compaction_interval: 30s
  data_dir:            /tmp/mimir-compactor
  consistency_delay:   1m
  cleanup_interval:    1m
  tenant_cleanup_delay: 1m
  sharding_ring:
    kvstore:
      store: consul
      consul:
        host: consul:8500

store_gateway:
  sharding_ring:
    replication_factor: 1
    heartbeat_period:   5s
    heartbeat_timeout:  15s
    wait_stability_min_duration: 0
    kvstore:
      store: consul
      consul:
        host: consul:8500

frontend:
  query_stats_enabled: true
  parallelize_shardable_queries: true
  align_queries_with_step: true
  cache_results: true

  # Uncomment when using "dns" service discovery mode for query-scheduler.
  # scheduler_address: "query-scheduler:9011"

  results_cache:
    backend: "memcached"
    memcached:
      addresses: "dns+memcached:11211"
    compression: snappy

frontend_worker:
  # Uncomment when using "dns" service discovery mode for query-scheduler.
  # scheduler_address: "query-scheduler:9011"

  # Uncomment to skip query-scheduler and enqueue queries directly in the query-frontend.
  # frontend_address: "query-frontend:9007"

query_scheduler:
  # Change to "dns" to switch to query-scheduler DNS-based service discovery.
  service_discovery_mode: "ring"

limits:
  # Limit max query time range to 31d
  max_query_length: 744h
  max_global_exemplars_per_user: 5000
  query_sharding_total_shards: 16
  query_sharding_max_sharded_queries: 32
  ingestion_rate: 50000
  accept_native_histograms: true

runtime_config:
  file: ./config/runtime.yaml
