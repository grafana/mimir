{{- if eq .Values.deploymentMode "microservices" }}
{{- if eq (include "mimir.gateway.isEnabled" .) "true" -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "mimir.gateway.service.name" $ }}
  labels:
    {{- include "mimir.labels" (dict "ctx" $ "component" "gateway") | nindent 4 }}
    {{- with .Values.gateway.service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- toYaml .Values.gateway.service.annotations | nindent 4 }}
  namespace: {{ $.Release.Namespace | quote }}
spec:
  type: {{ .Values.gateway.service.type }}
  {{- if semverCompare ">= 1.22-0" (include "mimir.kubeVersion" .) }}
  internalTrafficPolicy: {{ .Values.gateway.service.internalTrafficPolicy }}
  {{- end }}
  {{- with .Values.gateway.service.clusterIP }}
  clusterIP: {{ . }}
  {{- end }}
  {{- if and (eq "LoadBalancer" .Values.gateway.service.type) .Values.gateway.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.gateway.service.loadBalancerIP }}
  {{- end }}
  ports:
    - port: {{ .Values.gateway.service.port }}
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
      {{- if and (eq "NodePort" .Values.gateway.service.type) .Values.gateway.service.nodePort }}
      nodePort: {{ .Values.gateway.service.nodePort }}
      {{- end }}
    {{- with .Values.gateway.service.legacyPort }}
    - port: {{ . }}
      protocol: TCP
      name: legacy-http-metrics
      targetPort: http-metrics
    {{- end }}
  selector:
    {{- include "mimir.selectorLabels" (dict "ctx" $ "component" "gateway") | nindent 4 }}
{{- end -}}
{{- end }}
