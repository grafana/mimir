---
# Source: mimir-distributed/templates/store-gateway/store-gateway-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: large-values-mimir-store-gateway-zone-a
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: large-values
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/managed-by: Helm
    name: "store-gateway-zone-a"
    rollout-group: store-gateway
    zone: zone-a
  annotations:
    rollout-max-unavailable: "10"
  namespace: "citestns"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: large-values
      app.kubernetes.io/component: store-gateway
      rollout-group: store-gateway
      zone: zone-a
  updateStrategy:
    type: OnDelete
  serviceName: large-values-mimir-store-gateway-headless
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "50Gi"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: large-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/part-of: memberlist
        name: "store-gateway-zone-a"
        rollout-group: store-gateway
        zone: zone-a
      annotations:
      namespace: "citestns"
    spec:
      serviceAccountName: large-values-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        []
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: rollout-group
                operator: In
                values:
                - store-gateway
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - store-gateway-zone-a
            topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: mimir
              app.kubernetes.io/instance: large-values
              app.kubernetes.io/component: store-gateway
      tolerations:
        []
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: large-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: large-values-mimir-runtime
        - name: active-queries
          emptyDir: {}
      containers:
        - name: store-gateway
          imagePullPolicy: IfNotPresent
          args:
            - "-target=store-gateway"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            - "-store-gateway.sharding-ring.instance-availability-zone=zone-a"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            limits:
              memory: 8.5Gi
            requests:
              cpu: 1
              memory: 6Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
---
# Source: mimir-distributed/templates/store-gateway/store-gateway-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: large-values-mimir-store-gateway-zone-b
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: large-values
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/managed-by: Helm
    name: "store-gateway-zone-b"
    rollout-group: store-gateway
    zone: zone-b
  annotations:
    rollout-max-unavailable: "10"
  namespace: "citestns"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: large-values
      app.kubernetes.io/component: store-gateway
      rollout-group: store-gateway
      zone: zone-b
  updateStrategy:
    type: OnDelete
  serviceName: large-values-mimir-store-gateway-headless
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "50Gi"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: large-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/part-of: memberlist
        name: "store-gateway-zone-b"
        rollout-group: store-gateway
        zone: zone-b
      annotations:
      namespace: "citestns"
    spec:
      serviceAccountName: large-values-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        []
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: rollout-group
                operator: In
                values:
                - store-gateway
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - store-gateway-zone-b
            topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: mimir
              app.kubernetes.io/instance: large-values
              app.kubernetes.io/component: store-gateway
      tolerations:
        []
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: large-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: large-values-mimir-runtime
        - name: active-queries
          emptyDir: {}
      containers:
        - name: store-gateway
          imagePullPolicy: IfNotPresent
          args:
            - "-target=store-gateway"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            - "-store-gateway.sharding-ring.instance-availability-zone=zone-b"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            limits:
              memory: 8.5Gi
            requests:
              cpu: 1
              memory: 6Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
---
# Source: mimir-distributed/templates/store-gateway/store-gateway-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: large-values-mimir-store-gateway-zone-c
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: large-values
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/managed-by: Helm
    name: "store-gateway-zone-c"
    rollout-group: store-gateway
    zone: zone-c
  annotations:
    rollout-max-unavailable: "10"
  namespace: "citestns"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: large-values
      app.kubernetes.io/component: store-gateway
      rollout-group: store-gateway
      zone: zone-c
  updateStrategy:
    type: OnDelete
  serviceName: large-values-mimir-store-gateway-headless
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "50Gi"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: large-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/part-of: memberlist
        name: "store-gateway-zone-c"
        rollout-group: store-gateway
        zone: zone-c
      annotations:
      namespace: "citestns"
    spec:
      serviceAccountName: large-values-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        []
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: rollout-group
                operator: In
                values:
                - store-gateway
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - store-gateway-zone-c
            topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: mimir
              app.kubernetes.io/instance: large-values
              app.kubernetes.io/component: store-gateway
      tolerations:
        []
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: large-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: large-values-mimir-runtime
        - name: active-queries
          emptyDir: {}
      containers:
        - name: store-gateway
          imagePullPolicy: IfNotPresent
          args:
            - "-target=store-gateway"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            - "-store-gateway.sharding-ring.instance-availability-zone=zone-c"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            limits:
              memory: 8.5Gi
            requests:
              cpu: 1
              memory: 6Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
