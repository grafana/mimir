---
# Source: mimir-distributed/templates/mimir-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-enterprise-legacy-label-values-enterprise-metrics-config
  labels:
    app: enterprise-metrics
    heritage: Helm
    release: test-enterprise-legacy-label-values
  namespace: "citestns"
data:
  mimir.yaml: YWN0aXZpdHlfdHJhY2tlcjoKICBmaWxlcGF0aDogL2FjdGl2ZS1xdWVyeS10cmFja2VyL2FjdGl2aXR5LmxvZwphZG1pbl9hcGk6CiAgbGVhZGVyX2VsZWN0aW9uOgogICAgY2xpZW50X2NvbmZpZzoKICAgICAgdGxzX2VuYWJsZWQ6IGZhbHNlCiAgICBlbmFibGVkOiB0cnVlCiAgICByaW5nOgogICAgICBrdnN0b3JlOgogICAgICAgIHN0b3JlOiBtZW1iZXJsaXN0CmFkbWluX2NsaWVudDoKICBzdG9yYWdlOgogICAgczM6CiAgICAgIGFjY2Vzc19rZXlfaWQ6IGdyYWZhbmEtbWltaXIKICAgICAgYnVja2V0X25hbWU6IGVudGVycHJpc2UtbWV0cmljcy1hZG1pbgogICAgICBlbmRwb2ludDogdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtbWluaW8uY2l0ZXN0bnMuc3ZjOjkwMDAKICAgICAgaW5zZWN1cmU6IHRydWUKICAgICAgc2VjcmV0X2FjY2Vzc19rZXk6IHN1cGVyc2VjcmV0CiAgICB0eXBlOiBzMwphbGVydG1hbmFnZXI6CiAgYWxlcnRtYW5hZ2VyX2NsaWVudDoKICAgIHRsc19lbmFibGVkOiBmYWxzZQogIGRhdGFfZGlyOiAvZGF0YQogIGVuYWJsZV9hcGk6IHRydWUKICBleHRlcm5hbF91cmw6IC9hbGVydG1hbmFnZXIKICBmYWxsYmFja19jb25maWdfZmlsZTogL2NvbmZpZ3MvYWxlcnRtYW5hZ2VyX2ZhbGxiYWNrX2NvbmZpZy55YW1sCmFsZXJ0bWFuYWdlcl9zdG9yYWdlOgogIGJhY2tlbmQ6IHMzCiAgczM6CiAgICBhY2Nlc3Nfa2V5X2lkOiBncmFmYW5hLW1pbWlyCiAgICBidWNrZXRfbmFtZTogZW50ZXJwcmlzZS1tZXRyaWNzLXJ1bGVyCiAgICBlbmRwb2ludDogdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtbWluaW8uY2l0ZXN0bnMuc3ZjOjkwMDAKICAgIGluc2VjdXJlOiB0cnVlCiAgICBzZWNyZXRfYWNjZXNzX2tleTogc3VwZXJzZWNyZXQKYXV0aDoKICBhZG1pbjoKICAgIHBhc3NfYWNjZXNzX3BvbGljeV9uYW1lOiB0cnVlCiAgICBwYXNzX3Rva2VuX25hbWU6IHRydWUKICB0eXBlOiBlbnRlcnByaXNlCmJsb2Nrc19zdG9yYWdlOgogIGJhY2tlbmQ6IHMzCiAgYnVja2V0X3N0b3JlOgogICAgc3luY19kaXI6IC9kYXRhL3RzZGItc3luYwogIHMzOgogICAgYWNjZXNzX2tleV9pZDogZ3JhZmFuYS1taW1pcgogICAgYnVja2V0X25hbWU6IGVudGVycHJpc2UtbWV0cmljcy10c2RiCiAgICBlbmRwb2ludDogdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtbWluaW8uY2l0ZXN0bnMuc3ZjOjkwMDAKICAgIGluc2VjdXJlOiB0cnVlCiAgICBzZWNyZXRfYWNjZXNzX2tleTogc3VwZXJzZWNyZXQKICB0c2RiOgogICAgZGlyOiAvZGF0YS90c2RiCiAgICBoZWFkX2NvbXBhY3Rpb25faW50ZXJ2YWw6IDE1bQogICAgd2FsX3JlcGxheV9jb25jdXJyZW5jeTogMwpjbHVzdGVyX25hbWU6IHRlc3QtZW50ZXJwcmlzZS1sZWdhY3ktbGFiZWwtdmFsdWVzCmNvbXBhY3RvcjoKICBjb21wYWN0aW9uX2ludGVydmFsOiAzMG0KICBkYXRhX2RpcjogL2RhdGEKICBkZWxldGlvbl9kZWxheTogMmgKICBmaXJzdF9sZXZlbF9jb21wYWN0aW9uX3dhaXRfcGVyaW9kOiAyNW0KICBtYXhfY2xvc2luZ19ibG9ja3NfY29uY3VycmVuY3k6IDIKICBtYXhfb3BlbmluZ19ibG9ja3NfY29uY3VycmVuY3k6IDQKICBzaGFyZGluZ19yaW5nOgogICAgaGVhcnRiZWF0X3BlcmlvZDogMW0KICAgIGhlYXJ0YmVhdF90aW1lb3V0OiA0bQogICAgd2FpdF9zdGFiaWxpdHlfbWluX2R1cmF0aW9uOiAxbQogIHN5bWJvbHNfZmx1c2hlcnNfY29uY3VycmVuY3k6IDQKZGlzdHJpYnV0b3I6CiAgcmluZzoKICAgIGhlYXJ0YmVhdF9wZXJpb2Q6IDFtCiAgICBoZWFydGJlYXRfdGltZW91dDogNG0KZnJvbnRlbmQ6CiAgZ3JwY19jbGllbnRfY29uZmlnOgogICAgdGxzX2VuYWJsZWQ6IGZhbHNlCiAgbG9nX3F1ZXJ5X3JlcXVlc3RfaGVhZGVyczogWC1BY2Nlc3MtUG9saWN5LU5hbWUsWC1Ub2tlbi1OYW1lCiAgcGFyYWxsZWxpemVfc2hhcmRhYmxlX3F1ZXJpZXM6IHRydWUKICBzY2hlZHVsZXJfYWRkcmVzczogdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLXF1ZXJ5LXNjaGVkdWxlci1oZWFkbGVzcy5jaXRlc3Rucy5zdmM6OTA5NQpmcm9udGVuZF93b3JrZXI6CiAgZ3JwY19jbGllbnRfY29uZmlnOgogICAgbWF4X3NlbmRfbXNnX3NpemU6IDQxOTQzMDQwMAogICAgdGxzX2VuYWJsZWQ6IGZhbHNlCiAgcXVlcnlfc2NoZWR1bGVyX2dycGNfY2xpZW50X2NvbmZpZzoKICAgIHRsc19lbmFibGVkOiBmYWxzZQogIHNjaGVkdWxlcl9hZGRyZXNzOiB0ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtcXVlcnktc2NoZWR1bGVyLWhlYWRsZXNzLmNpdGVzdG5zLnN2Yzo5MDk1CmdhdGV3YXk6CiAgcHJveHk6CiAgICBhZG1pbl9hcGk6CiAgICAgIHRsc19lbmFibGVkOiBmYWxzZQogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtYWRtaW4tYXBpLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBhbGVydG1hbmFnZXI6CiAgICAgIHRsc19lbmFibGVkOiBmYWxzZQogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtYWxlcnRtYW5hZ2VyLWhlYWRsZXNzLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBjb21wYWN0b3I6CiAgICAgIHRsc19lbmFibGVkOiBmYWxzZQogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtY29tcGFjdG9yLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBkZWZhdWx0OgogICAgICB0bHNfZW5hYmxlZDogZmFsc2UKICAgICAgdXJsOiBodHRwOi8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWFkbWluLWFwaS5jaXRlc3Rucy5zdmM6ODA4MAogICAgZGlzdHJpYnV0b3I6CiAgICAgIHRsc19lbmFibGVkOiBmYWxzZQogICAgICB1cmw6IGRuczovLy90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtZGlzdHJpYnV0b3ItaGVhZGxlc3MuY2l0ZXN0bnMuc3ZjLmNsdXN0ZXIubG9jYWwuOjkwOTUKICAgIGluZ2VzdGVyOgogICAgICB0bHNfZW5hYmxlZDogZmFsc2UKICAgICAgdXJsOiBodHRwOi8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWluZ2VzdGVyLWhlYWRsZXNzLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBxdWVyeV9mcm9udGVuZDoKICAgICAgdGxzX2VuYWJsZWQ6IGZhbHNlCiAgICAgIHVybDogaHR0cDovL3Rlc3QtZW50ZXJwcmlzZS1sZWdhY3ktbGFiZWwtdmFsdWVzLWVudGVycHJpc2UtbWV0cmljcy1xdWVyeS1mcm9udGVuZC5jaXRlc3Rucy5zdmM6ODA4MAogICAgcnVsZXI6CiAgICAgIHRsc19lbmFibGVkOiBmYWxzZQogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtcnVsZXIuY2l0ZXN0bnMuc3ZjOjgwODAKICAgIHN0b3JlX2dhdGV3YXk6CiAgICAgIHRsc19lbmFibGVkOiBmYWxzZQogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3Mtc3RvcmUtZ2F0ZXdheS1oZWFkbGVzcy5jaXRlc3Rucy5zdmM6ODA4MAppbmdlc3RlcjoKICByaW5nOgogICAgZmluYWxfc2xlZXA6IDBzCiAgICBoZWFydGJlYXRfcGVyaW9kOiAybQogICAgaGVhcnRiZWF0X3RpbWVvdXQ6IDEwbQogICAgbnVtX3Rva2VuczogNTEyCiAgICB0b2tlbnNfZmlsZV9wYXRoOiAvZGF0YS90b2tlbnMKICAgIHVucmVnaXN0ZXJfb25fc2h1dGRvd246IGZhbHNlCiAgICB6b25lX2F3YXJlbmVzc19lbmFibGVkOiB0cnVlCmluZ2VzdGVyX2NsaWVudDoKICBncnBjX2NsaWVudF9jb25maWc6CiAgICBtYXhfcmVjdl9tc2dfc2l6ZTogMTA0ODU3NjAwCiAgICBtYXhfc2VuZF9tc2dfc2l6ZTogMTA0ODU3NjAwCiAgICB0bHNfZW5hYmxlZDogZmFsc2UKaW5zdHJ1bWVudGF0aW9uOgogIGRpc3RyaWJ1dG9yX2NsaWVudDoKICAgIGFkZHJlc3M6IGRuczovLy90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtZGlzdHJpYnV0b3ItaGVhZGxlc3MuY2l0ZXN0bnMuc3ZjLmNsdXN0ZXIubG9jYWwuOjkwOTUKICAgIHRsc19lbmFibGVkOiBmYWxzZQogIGVuYWJsZWQ6IHRydWUKbGljZW5zZToKICBwYXRoOiAvbGljZW5zZS9saWNlbnNlLmp3dApsaW1pdHM6CiAgbWF4X2NhY2hlX2ZyZXNobmVzczogMTBtCiAgbWF4X3F1ZXJ5X3BhcmFsbGVsaXNtOiAyNDAKICBtYXhfdG90YWxfcXVlcnlfbGVuZ3RoOiAxMjAwMGgKbWVtYmVybGlzdDoKICBhYm9ydF9pZl9jbHVzdGVyX2pvaW5fZmFpbHM6IGZhbHNlCiAgY29tcHJlc3Npb25fZW5hYmxlZDogZmFsc2UKICBqb2luX21lbWJlcnM6CiAgLSBkbnMrdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWdvc3NpcC1yaW5nLmNpdGVzdG5zLnN2Yy5jbHVzdGVyLmxvY2FsLjo3OTQ2CnF1ZXJpZXI6CiAgbWF4X2NvbmN1cnJlbnQ6IDE2CiAgc3RvcmVfZ2F0ZXdheV9jbGllbnQ6CiAgICB0bHNfZW5hYmxlZDogZmFsc2UKcXVlcnlfc2NoZWR1bGVyOgogIGdycGNfY2xpZW50X2NvbmZpZzoKICAgIHRsc19lbmFibGVkOiBmYWxzZQogIG1heF9vdXRzdGFuZGluZ19yZXF1ZXN0c19wZXJfdGVuYW50OiA4MDAKcnVsZXI6CiAgYWxlcnRtYW5hZ2VyX2NsaWVudDoKICAgIHRsc19lbmFibGVkOiBmYWxzZQogIGFsZXJ0bWFuYWdlcl91cmw6IGRuc3Nydm5vYStodHRwOi8vX2h0dHAtbWV0cmljcy5fdGNwLnRlc3QtZW50ZXJwcmlzZS1sZWdhY3ktbGFiZWwtdmFsdWVzLWVudGVycHJpc2UtbWV0cmljcy1hbGVydG1hbmFnZXItaGVhZGxlc3MuY2l0ZXN0bnMuc3ZjLmNsdXN0ZXIubG9jYWwuL2FsZXJ0bWFuYWdlcgogIGVuYWJsZV9hcGk6IHRydWUKICBydWxlX3BhdGg6IC9kYXRhCiAgcnVsZXJfY2xpZW50OgogICAgdGxzX2VuYWJsZWQ6IGZhbHNlCnJ1bGVyX3N0b3JhZ2U6CiAgYmFja2VuZDogczMKICBzMzoKICAgIGFjY2Vzc19rZXlfaWQ6IGdyYWZhbmEtbWltaXIKICAgIGJ1Y2tldF9uYW1lOiBlbnRlcnByaXNlLW1ldHJpY3MtcnVsZXIKICAgIGVuZHBvaW50OiB0ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1taW5pby5jaXRlc3Rucy5zdmM6OTAwMAogICAgaW5zZWN1cmU6IHRydWUKICAgIHNlY3JldF9hY2Nlc3Nfa2V5OiBzdXBlcnNlY3JldApydW50aW1lX2NvbmZpZzoKICBmaWxlOiAvdmFyL2VudGVycHJpc2UtbWV0cmljcy9ydW50aW1lLnlhbWwKc2VydmVyOiBudWxsCnN0b3JlX2dhdGV3YXk6CiAgc2hhcmRpbmdfcmluZzoKICAgIGhlYXJ0YmVhdF9wZXJpb2Q6IDFtCiAgICBoZWFydGJlYXRfdGltZW91dDogMTBtCiAgICBrdnN0b3JlOgogICAgICBwcmVmaXg6IG11bHRpLXpvbmUvCiAgICB0b2tlbnNfZmlsZV9wYXRoOiAvZGF0YS90b2tlbnMKICAgIHVucmVnaXN0ZXJfb25fc2h1dGRvd246IGZhbHNlCiAgICB3YWl0X3N0YWJpbGl0eV9taW5fZHVyYXRpb246IDFtCiAgICB6b25lX2F3YXJlbmVzc19lbmFibGVkOiB0cnVlCnVzYWdlX3N0YXRzOgogIGluc3RhbGxhdGlvbl9tb2RlOiBoZWxt
