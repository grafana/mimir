---
# Source: mimir-distributed/templates/mimir-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-enterprise-legacy-label-values-enterprise-metrics-config
  labels:
    app: enterprise-metrics
    heritage: Helm
    release: test-enterprise-legacy-label-values
  namespace: "citestns"
data:
  mimir.yaml: YWN0aXZpdHlfdHJhY2tlcjoKICBmaWxlcGF0aDogL2FjdGl2ZS1xdWVyeS10cmFja2VyL2FjdGl2aXR5LmxvZwphZG1pbl9hcGk6CiAgbGVhZGVyX2VsZWN0aW9uOgogICAgZW5hYmxlZDogdHJ1ZQogICAgcmluZzoKICAgICAga3ZzdG9yZToKICAgICAgICBzdG9yZTogbWVtYmVybGlzdAphZG1pbl9jbGllbnQ6CiAgc3RvcmFnZToKICAgIHMzOgogICAgICBhY2Nlc3Nfa2V5X2lkOiBncmFmYW5hLW1pbWlyCiAgICAgIGJ1Y2tldF9uYW1lOiBlbnRlcnByaXNlLW1ldHJpY3MtYWRtaW4KICAgICAgZW5kcG9pbnQ6IHRlc3QtZW50ZXJwcmlzZS1sZWdhY3ktbGFiZWwtdmFsdWVzLW1pbmlvLmNpdGVzdG5zLnN2Yzo5MDAwCiAgICAgIGluc2VjdXJlOiB0cnVlCiAgICAgIHNlY3JldF9hY2Nlc3Nfa2V5OiBzdXBlcnNlY3JldAogICAgdHlwZTogczMKYWxlcnRtYW5hZ2VyOgogIGRhdGFfZGlyOiAvZGF0YQogIGVuYWJsZV9hcGk6IHRydWUKICBleHRlcm5hbF91cmw6IC9hbGVydG1hbmFnZXIKICBmYWxsYmFja19jb25maWdfZmlsZTogL2NvbmZpZ3MvYWxlcnRtYW5hZ2VyX2ZhbGxiYWNrX2NvbmZpZy55YW1sCmFsZXJ0bWFuYWdlcl9zdG9yYWdlOgogIGJhY2tlbmQ6IHMzCiAgczM6CiAgICBhY2Nlc3Nfa2V5X2lkOiBncmFmYW5hLW1pbWlyCiAgICBidWNrZXRfbmFtZTogZW50ZXJwcmlzZS1tZXRyaWNzLXJ1bGVyCiAgICBlbmRwb2ludDogdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtbWluaW8uY2l0ZXN0bnMuc3ZjOjkwMDAKICAgIGluc2VjdXJlOiB0cnVlCiAgICBzZWNyZXRfYWNjZXNzX2tleTogc3VwZXJzZWNyZXQKYXV0aDoKICB0eXBlOiBlbnRlcnByaXNlCmJsb2Nrc19zdG9yYWdlOgogIGJhY2tlbmQ6IHMzCiAgYnVja2V0X3N0b3JlOgogICAgc3luY19kaXI6IC9kYXRhL3RzZGItc3luYwogIHMzOgogICAgYWNjZXNzX2tleV9pZDogZ3JhZmFuYS1taW1pcgogICAgYnVja2V0X25hbWU6IGVudGVycHJpc2UtbWV0cmljcy10c2RiCiAgICBlbmRwb2ludDogdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtbWluaW8uY2l0ZXN0bnMuc3ZjOjkwMDAKICAgIGluc2VjdXJlOiB0cnVlCiAgICBzZWNyZXRfYWNjZXNzX2tleTogc3VwZXJzZWNyZXQKICB0c2RiOgogICAgZGlyOiAvZGF0YS90c2RiCiAgICBoZWFkX2NvbXBhY3Rpb25faW50ZXJ2YWw6IDE1bQogICAgd2FsX3JlcGxheV9jb25jdXJyZW5jeTogMwpjbHVzdGVyX25hbWU6IHRlc3QtZW50ZXJwcmlzZS1sZWdhY3ktbGFiZWwtdmFsdWVzCmNvbXBhY3RvcjoKICBjb21wYWN0aW9uX2ludGVydmFsOiAzMG0KICBkYXRhX2RpcjogL2RhdGEKICBkZWxldGlvbl9kZWxheTogMmgKICBmaXJzdF9sZXZlbF9jb21wYWN0aW9uX3dhaXRfcGVyaW9kOiAyNW0KICBtYXhfY2xvc2luZ19ibG9ja3NfY29uY3VycmVuY3k6IDIKICBtYXhfb3BlbmluZ19ibG9ja3NfY29uY3VycmVuY3k6IDQKICBzaGFyZGluZ19yaW5nOgogICAgaGVhcnRiZWF0X3BlcmlvZDogMW0KICAgIGhlYXJ0YmVhdF90aW1lb3V0OiA0bQogICAgd2FpdF9zdGFiaWxpdHlfbWluX2R1cmF0aW9uOiAxbQogIHN5bWJvbHNfZmx1c2hlcnNfY29uY3VycmVuY3k6IDQKZGlzdHJpYnV0b3I6CiAgcmluZzoKICAgIGhlYXJ0YmVhdF9wZXJpb2Q6IDFtCiAgICBoZWFydGJlYXRfdGltZW91dDogNG0KZnJvbnRlbmQ6CiAgcGFyYWxsZWxpemVfc2hhcmRhYmxlX3F1ZXJpZXM6IHRydWUKICBzY2hlZHVsZXJfYWRkcmVzczogdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLXF1ZXJ5LXNjaGVkdWxlci1oZWFkbGVzcy5jaXRlc3Rucy5zdmM6OTA5NQpmcm9udGVuZF93b3JrZXI6CiAgZ3JwY19jbGllbnRfY29uZmlnOgogICAgbWF4X3NlbmRfbXNnX3NpemU6IDQxOTQzMDQwMAogIHNjaGVkdWxlcl9hZGRyZXNzOiB0ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtcXVlcnktc2NoZWR1bGVyLWhlYWRsZXNzLmNpdGVzdG5zLnN2Yzo5MDk1CmdhdGV3YXk6CiAgcHJveHk6CiAgICBhZG1pbl9hcGk6CiAgICAgIHVybDogaHR0cDovL3Rlc3QtZW50ZXJwcmlzZS1sZWdhY3ktbGFiZWwtdmFsdWVzLWVudGVycHJpc2UtbWV0cmljcy1hZG1pbi1hcGkuY2l0ZXN0bnMuc3ZjOjgwODAKICAgIGFsZXJ0bWFuYWdlcjoKICAgICAgdXJsOiBodHRwOi8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWFsZXJ0bWFuYWdlci1oZWFkbGVzcy5jaXRlc3Rucy5zdmM6ODA4MAogICAgY29tcGFjdG9yOgogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtY29tcGFjdG9yLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBkZWZhdWx0OgogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtYWRtaW4tYXBpLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBkaXN0cmlidXRvcjoKICAgICAgdXJsOiBkbnM6Ly8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWRpc3RyaWJ1dG9yLWhlYWRsZXNzLmNpdGVzdG5zLnN2Yy5jbHVzdGVyLmxvY2FsLjo5MDk1CiAgICBpbmdlc3RlcjoKICAgICAgdXJsOiBodHRwOi8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWluZ2VzdGVyLWhlYWRsZXNzLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBxdWVyeV9mcm9udGVuZDoKICAgICAgdXJsOiBodHRwOi8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLXF1ZXJ5LWZyb250ZW5kLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBydWxlcjoKICAgICAgdXJsOiBodHRwOi8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLXJ1bGVyLmNpdGVzdG5zLnN2Yzo4MDgwCiAgICBzdG9yZV9nYXRld2F5OgogICAgICB1cmw6IGh0dHA6Ly90ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3Mtc3RvcmUtZ2F0ZXdheS1oZWFkbGVzcy5jaXRlc3Rucy5zdmM6ODA4MAppbmdlc3RlcjoKICByaW5nOgogICAgZmluYWxfc2xlZXA6IDBzCiAgICBoZWFydGJlYXRfcGVyaW9kOiAybQogICAgaGVhcnRiZWF0X3RpbWVvdXQ6IDEwbQogICAgbnVtX3Rva2VuczogNTEyCiAgICB0b2tlbnNfZmlsZV9wYXRoOiAvZGF0YS90b2tlbnMKICAgIHVucmVnaXN0ZXJfb25fc2h1dGRvd246IGZhbHNlCiAgICB6b25lX2F3YXJlbmVzc19lbmFibGVkOiB0cnVlCmluZ2VzdGVyX2NsaWVudDoKICBncnBjX2NsaWVudF9jb25maWc6CiAgICBtYXhfcmVjdl9tc2dfc2l6ZTogMTA0ODU3NjAwCiAgICBtYXhfc2VuZF9tc2dfc2l6ZTogMTA0ODU3NjAwCmluc3RydW1lbnRhdGlvbjoKICBkaXN0cmlidXRvcl9jbGllbnQ6CiAgICBhZGRyZXNzOiBkbnM6Ly8vdGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWRpc3RyaWJ1dG9yLWhlYWRsZXNzLmNpdGVzdG5zLnN2Yy5jbHVzdGVyLmxvY2FsLjo5MDk1CiAgZW5hYmxlZDogdHJ1ZQpsaWNlbnNlOgogIHBhdGg6IC9saWNlbnNlL2xpY2Vuc2Uuand0CmxpbWl0czoKICBtYXhfY2FjaGVfZnJlc2huZXNzOiAxMG0KICBtYXhfcXVlcnlfcGFyYWxsZWxpc206IDI0MAogIG1heF90b3RhbF9xdWVyeV9sZW5ndGg6IDEyMDAwaAptZW1iZXJsaXN0OgogIGFib3J0X2lmX2NsdXN0ZXJfam9pbl9mYWlsczogZmFsc2UKICBjb21wcmVzc2lvbl9lbmFibGVkOiBmYWxzZQogIGpvaW5fbWVtYmVyczoKICAtIGRucyt0ZXN0LWVudGVycHJpc2UtbGVnYWN5LWxhYmVsLXZhbHVlcy1lbnRlcnByaXNlLW1ldHJpY3MtZ29zc2lwLXJpbmcuY2l0ZXN0bnMuc3ZjLmNsdXN0ZXIubG9jYWwuOjc5NDYKcXVlcmllcjoKICBtYXhfY29uY3VycmVudDogMTYKcXVlcnlfc2NoZWR1bGVyOgogIG1heF9vdXRzdGFuZGluZ19yZXF1ZXN0c19wZXJfdGVuYW50OiA4MDAKcnVsZXI6CiAgYWxlcnRtYW5hZ2VyX3VybDogZG5zc3J2bm9hK2h0dHA6Ly9faHR0cC1tZXRyaWNzLl90Y3AudGVzdC1lbnRlcnByaXNlLWxlZ2FjeS1sYWJlbC12YWx1ZXMtZW50ZXJwcmlzZS1tZXRyaWNzLWFsZXJ0bWFuYWdlci1oZWFkbGVzcy5jaXRlc3Rucy5zdmMuY2x1c3Rlci5sb2NhbC4vYWxlcnRtYW5hZ2VyCiAgZW5hYmxlX2FwaTogdHJ1ZQogIHJ1bGVfcGF0aDogL2RhdGEKcnVsZXJfc3RvcmFnZToKICBiYWNrZW5kOiBzMwogIHMzOgogICAgYWNjZXNzX2tleV9pZDogZ3JhZmFuYS1taW1pcgogICAgYnVja2V0X25hbWU6IGVudGVycHJpc2UtbWV0cmljcy1ydWxlcgogICAgZW5kcG9pbnQ6IHRlc3QtZW50ZXJwcmlzZS1sZWdhY3ktbGFiZWwtdmFsdWVzLW1pbmlvLmNpdGVzdG5zLnN2Yzo5MDAwCiAgICBpbnNlY3VyZTogdHJ1ZQogICAgc2VjcmV0X2FjY2Vzc19rZXk6IHN1cGVyc2VjcmV0CnJ1bnRpbWVfY29uZmlnOgogIGZpbGU6IC92YXIvZW50ZXJwcmlzZS1tZXRyaWNzL3J1bnRpbWUueWFtbApzdG9yZV9nYXRld2F5OgogIHNoYXJkaW5nX3Jpbmc6CiAgICBoZWFydGJlYXRfcGVyaW9kOiAxbQogICAgaGVhcnRiZWF0X3RpbWVvdXQ6IDRtCiAgICBrdnN0b3JlOgogICAgICBwcmVmaXg6IG11bHRpLXpvbmUvCiAgICB0b2tlbnNfZmlsZV9wYXRoOiAvZGF0YS90b2tlbnMKICAgIHVucmVnaXN0ZXJfb25fc2h1dGRvd246IGZhbHNlCiAgICB3YWl0X3N0YWJpbGl0eV9taW5fZHVyYXRpb246IDFtCiAgICB6b25lX2F3YXJlbmVzc19lbmFibGVkOiB0cnVlCnVzYWdlX3N0YXRzOgogIGluc3RhbGxhdGlvbl9tb2RlOiBoZWxt
