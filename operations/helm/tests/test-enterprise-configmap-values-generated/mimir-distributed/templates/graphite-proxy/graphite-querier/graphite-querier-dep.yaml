---
# Source: mimir-distributed/templates/graphite-proxy/graphite-querier/graphite-querier-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-enterprise-configmap-values-mimir-graphite-querier
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: test-enterprise-configmap-values
    app.kubernetes.io/component: graphite-querier
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "citestns"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: test-enterprise-configmap-values
      app.kubernetes.io/component: graphite-querier
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: test-enterprise-configmap-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: graphite-querier
      annotations:
        minio-secret-version: "42"
      namespace: "citestns"
    spec:
      serviceAccountName: test-enterprise-configmap-values-mimir
      securityContext:
        {}
      initContainers:
      containers:
        - name: graphite-querier
          imagePullPolicy: IfNotPresent
          args:
            - -target=graphite-querier
            - -config.file=/etc/mimir/mimir.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: graphite-schemas
              mountPath: /etc/graphite-proxy
            - name: license
              mountPath: /license
            - name: storage
              mountPath: "/data"
              subPath: 
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            readOnlyRootFilesystem: true
          env:
          envFrom:
            - secretRef:
                name: mimir-minio-secret
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: target
                  operator: In
                  values:
                  - graphite-querier
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        []
      terminationGracePeriodSeconds: 180
      volumes:
        - name: config
          configMap:
            name: test-enterprise-configmap-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: test-enterprise-configmap-values-mimir-runtime
        - name: graphite-schemas
          configMap:
            name: test-enterprise-configmap-values-mimir-graphite-schemas
        - name: license
          secret:
            secretName: test-enterprise-configmap-values-mimir-license
        - name: storage
          emptyDir: {}
