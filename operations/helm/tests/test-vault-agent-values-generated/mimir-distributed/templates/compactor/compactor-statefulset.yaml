---
# Source: mimir-distributed/templates/compactor/compactor-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-vault-agent-values-mimir-compactor
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: test-vault-agent-values
    app.kubernetes.io/component: compactor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "citestns"
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: test-vault-agent-values
      app.kubernetes.io/component: compactor
  updateStrategy:
    type: RollingUpdate
  serviceName: test-vault-agent-values-mimir-compactor
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "2Gi"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: test-vault-agent-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: compactor
        app.kubernetes.io/part-of: memberlist
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'test-role-name'
        vault.hashicorp.com/agent-inject-secret-client.crt: 'client-cert-path'
        vault.hashicorp.com/agent-inject-secret-client.key: 'client-key-path'
        vault.hashicorp.com/agent-inject-secret-server.crt: 'server-cert-path'
        vault.hashicorp.com/agent-inject-secret-server.key: 'server-key-path'
        vault.hashicorp.com/agent-inject-secret-root.crt: 'ca-cert-path'
      namespace: "citestns"
    spec:
      serviceAccountName: test-vault-agent-values-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        []
      nodeSelector:
        {}
      affinity:
        {}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: test-vault-agent-values
            app.kubernetes.io/component: compactor
      tolerations:
        []
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: test-vault-agent-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: test-vault-agent-values-mimir-runtime
        - name: active-queries
          emptyDir: {}
      containers:
        - name: compactor
          imagePullPolicy: IfNotPresent
          args:
            - "-target=compactor"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
