---
# Source: mimir-distributed/templates/distributor/distributor-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openshift-values-mimir-distributor
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: openshift-values
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "citestns"
spec:
  # If replicas is not number (when using values file it's float64, when using --set arg it's int64) and is false (i.e. null) don't set it
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: openshift-values
      app.kubernetes.io/component: distributor
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: openshift-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: distributor
        app.kubernetes.io/part-of: memberlist
      annotations:
      namespace: "citestns"
    spec:
      serviceAccountName: openshift-values-mimir
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        []
      containers:
        - name: distributor
          imagePullPolicy: IfNotPresent
          args:
            - "-target=distributor"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            # When write requests go through distributors via gRPC, we want gRPC clients to re-resolve the distributors DNS
            # endpoint before the distributor process is terminated, in order to avoid any failures during graceful shutdown.
            # To achieve it, we set a shutdown delay greater than the gRPC max connection age.
            - "-server.grpc.keepalive.max-connection-age=60s"
            - "-server.grpc.keepalive.max-connection-age-grace=5m"
            - "-server.grpc.keepalive.max-connection-idle=1m"
            - "-shutdown-delay=90s"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: license
              mountPath: /license
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
              subPath: 
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
            - name: "GOMAXPROCS"
              value: "8"
            - name: "JAEGER_REPORTER_MAX_QUEUE_SIZE"
              value: "1000"
          envFrom:
      nodeSelector:
        {}
      affinity:
        {}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: openshift-values
            app.kubernetes.io/component: distributor
      tolerations:
        []
      terminationGracePeriodSeconds: 100
      volumes:
        - name: config
          configMap:
            name: openshift-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: license
          secret:
            secretName: openshift-values-mimir-license
        - name: runtime-config
          configMap:
            name: openshift-values-mimir-runtime
        - name: storage
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
