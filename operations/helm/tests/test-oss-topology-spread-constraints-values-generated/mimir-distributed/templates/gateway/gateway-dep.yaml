---
# Source: mimir-distributed/templates/gateway/gateway-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {}
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: test-oss-topology-spread-constraints-values
    app.kubernetes.io/component: gateway
    app.kubernetes.io/managed-by: Helm
  name: test-oss-topology-spread-constraints-values-mimir-gateway
  namespace: "citestns"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: test-oss-topology-spread-constraints-values
      app.kubernetes.io/component: gateway
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: test-oss-topology-spread-constraints-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: gateway
      annotations:
      namespace: "citestns"
    spec:
      serviceAccountName: test-oss-topology-spread-constraints-values-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: gateway
          image: docker.io/nginxinc/nginx-unprivileged:1.29-alpine
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: test-oss-topology-spread-constraints-values
            app.kubernetes.io/component: gateway
        matchLabelKeys:
          - pod-template-hash
        nodeAffinityPolicy: Honor
        nodeTaintsPolicy: Honor
        minDomains: 1
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: test-oss-topology-spread-constraints-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: test-oss-topology-spread-constraints-values-mimir-runtime
        - name: nginx-config
          configMap:
            name: test-oss-topology-spread-constraints-values-mimir-gateway-nginx
        - name: docker-entrypoint-d-override
          emptyDir: {}
        - name: tmp
          emptyDir: {}
