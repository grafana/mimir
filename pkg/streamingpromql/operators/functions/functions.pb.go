// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: functions.proto

package functions

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Function int32

const (
	FUNCTION_UNKNOWN                      Function = 0
	FUNCTION_ABS                          Function = 1
	FUNCTION_ABSENT                       Function = 2
	FUNCTION_ABSENT_OVER_TIME             Function = 3
	FUNCTION_ACOS                         Function = 4
	FUNCTION_ACOSH                        Function = 5
	FUNCTION_ASIN                         Function = 6
	FUNCTION_ASINH                        Function = 7
	FUNCTION_ATAN                         Function = 8
	FUNCTION_ATANH                        Function = 9
	FUNCTION_AVG_OVER_TIME                Function = 10
	FUNCTION_CEIL                         Function = 11
	FUNCTION_CHANGES                      Function = 12
	FUNCTION_CLAMP                        Function = 13
	FUNCTION_CLAMP_MAX                    Function = 14
	FUNCTION_CLAMP_MIN                    Function = 15
	FUNCTION_COS                          Function = 16
	FUNCTION_COSH                         Function = 17
	FUNCTION_COUNT_OVER_TIME              Function = 18
	FUNCTION_DAY_OF_MONTH                 Function = 19
	FUNCTION_DAY_OF_WEEK                  Function = 20
	FUNCTION_DAY_OF_YEAR                  Function = 21
	FUNCTION_DAYS_IN_MONTH                Function = 22
	FUNCTION_DEG                          Function = 23
	FUNCTION_DELTA                        Function = 24
	FUNCTION_DERIV                        Function = 25
	FUNCTION_DOUBLE_EXPONENTIAL_SMOOTHING Function = 26
	FUNCTION_EXP                          Function = 27
	FUNCTION_FLOOR                        Function = 28
	FUNCTION_HISTOGRAM_AVG                Function = 29
	FUNCTION_HISTOGRAM_COUNT              Function = 30
	FUNCTION_HISTOGRAM_FRACTION           Function = 31
	FUNCTION_HISTOGRAM_QUANTILE           Function = 32
	FUNCTION_HISTOGRAM_STDDEV             Function = 33
	FUNCTION_HISTOGRAM_STDVAR             Function = 34
	FUNCTION_HISTOGRAM_SUM                Function = 35
	FUNCTION_HOUR                         Function = 36
	FUNCTION_IDELTA                       Function = 37
	FUNCTION_INCREASE                     Function = 38
	FUNCTION_IRATE                        Function = 39
	FUNCTION_LABEL_JOIN                   Function = 40
	FUNCTION_LABEL_REPLACE                Function = 41
	FUNCTION_LAST_OVER_TIME               Function = 42
	FUNCTION_LN                           Function = 43
	FUNCTION_LOG10                        Function = 44
	FUNCTION_LOG2                         Function = 45
	FUNCTION_MAX_OVER_TIME                Function = 46
	FUNCTION_MIN_OVER_TIME                Function = 47
	FUNCTION_MINUTE                       Function = 48
	FUNCTION_MONTH                        Function = 49
	FUNCTION_PREDICT_LINEAR               Function = 50
	FUNCTION_PRESENT_OVER_TIME            Function = 51
	FUNCTION_QUANTILE_OVER_TIME           Function = 52
	FUNCTION_RAD                          Function = 53
	FUNCTION_RATE                         Function = 54
	FUNCTION_RESETS                       Function = 55
	FUNCTION_ROUND                        Function = 56
	FUNCTION_SGN                          Function = 57
	FUNCTION_SIN                          Function = 58
	FUNCTION_SINH                         Function = 59
	FUNCTION_SORT                         Function = 60
	FUNCTION_SORT_BY_LABEL                Function = 76
	FUNCTION_SORT_BY_LABEL_DESC           Function = 77
	FUNCTION_SORT_DESC                    Function = 61
	FUNCTION_SQRT                         Function = 62
	FUNCTION_STDDEV_OVER_TIME             Function = 63
	FUNCTION_STDVAR_OVER_TIME             Function = 64
	FUNCTION_SUM_OVER_TIME                Function = 65
	FUNCTION_TAN                          Function = 66
	FUNCTION_TANH                         Function = 67
	FUNCTION_TIMESTAMP                    Function = 68
	FUNCTION_VECTOR                       Function = 69
	FUNCTION_YEAR                         Function = 70
	FUNCTION_PI                           Function = 71
	FUNCTION_SCALAR                       Function = 72
	FUNCTION_TIME                         Function = 73
)

var Function_name = map[int32]string{
	0:  "FUNCTION_UNKNOWN",
	1:  "FUNCTION_ABS",
	2:  "FUNCTION_ABSENT",
	3:  "FUNCTION_ABSENT_OVER_TIME",
	4:  "FUNCTION_ACOS",
	5:  "FUNCTION_ACOSH",
	6:  "FUNCTION_ASIN",
	7:  "FUNCTION_ASINH",
	8:  "FUNCTION_ATAN",
	9:  "FUNCTION_ATANH",
	10: "FUNCTION_AVG_OVER_TIME",
	11: "FUNCTION_CEIL",
	12: "FUNCTION_CHANGES",
	13: "FUNCTION_CLAMP",
	14: "FUNCTION_CLAMP_MAX",
	15: "FUNCTION_CLAMP_MIN",
	16: "FUNCTION_COS",
	17: "FUNCTION_COSH",
	18: "FUNCTION_COUNT_OVER_TIME",
	19: "FUNCTION_DAY_OF_MONTH",
	20: "FUNCTION_DAY_OF_WEEK",
	21: "FUNCTION_DAY_OF_YEAR",
	22: "FUNCTION_DAYS_IN_MONTH",
	23: "FUNCTION_DEG",
	24: "FUNCTION_DELTA",
	25: "FUNCTION_DERIV",
	26: "FUNCTION_DOUBLE_EXPONENTIAL_SMOOTHING",
	27: "FUNCTION_EXP",
	28: "FUNCTION_FLOOR",
	29: "FUNCTION_HISTOGRAM_AVG",
	30: "FUNCTION_HISTOGRAM_COUNT",
	31: "FUNCTION_HISTOGRAM_FRACTION",
	32: "FUNCTION_HISTOGRAM_QUANTILE",
	33: "FUNCTION_HISTOGRAM_STDDEV",
	34: "FUNCTION_HISTOGRAM_STDVAR",
	35: "FUNCTION_HISTOGRAM_SUM",
	36: "FUNCTION_HOUR",
	37: "FUNCTION_IDELTA",
	38: "FUNCTION_INCREASE",
	39: "FUNCTION_IRATE",
	40: "FUNCTION_LABEL_JOIN",
	41: "FUNCTION_LABEL_REPLACE",
	42: "FUNCTION_LAST_OVER_TIME",
	43: "FUNCTION_LN",
	44: "FUNCTION_LOG10",
	45: "FUNCTION_LOG2",
	46: "FUNCTION_MAX_OVER_TIME",
	47: "FUNCTION_MIN_OVER_TIME",
	48: "FUNCTION_MINUTE",
	49: "FUNCTION_MONTH",
	50: "FUNCTION_PREDICT_LINEAR",
	51: "FUNCTION_PRESENT_OVER_TIME",
	52: "FUNCTION_QUANTILE_OVER_TIME",
	53: "FUNCTION_RAD",
	54: "FUNCTION_RATE",
	55: "FUNCTION_RESETS",
	56: "FUNCTION_ROUND",
	57: "FUNCTION_SGN",
	58: "FUNCTION_SIN",
	59: "FUNCTION_SINH",
	60: "FUNCTION_SORT",
	76: "FUNCTION_SORT_BY_LABEL",
	77: "FUNCTION_SORT_BY_LABEL_DESC",
	61: "FUNCTION_SORT_DESC",
	62: "FUNCTION_SQRT",
	63: "FUNCTION_STDDEV_OVER_TIME",
	64: "FUNCTION_STDVAR_OVER_TIME",
	65: "FUNCTION_SUM_OVER_TIME",
	66: "FUNCTION_TAN",
	67: "FUNCTION_TANH",
	68: "FUNCTION_TIMESTAMP",
	69: "FUNCTION_VECTOR",
	70: "FUNCTION_YEAR",
	71: "FUNCTION_PI",
	72: "FUNCTION_SCALAR",
	73: "FUNCTION_TIME",
}

var Function_value = map[string]int32{
	"FUNCTION_UNKNOWN":                      0,
	"FUNCTION_ABS":                          1,
	"FUNCTION_ABSENT":                       2,
	"FUNCTION_ABSENT_OVER_TIME":             3,
	"FUNCTION_ACOS":                         4,
	"FUNCTION_ACOSH":                        5,
	"FUNCTION_ASIN":                         6,
	"FUNCTION_ASINH":                        7,
	"FUNCTION_ATAN":                         8,
	"FUNCTION_ATANH":                        9,
	"FUNCTION_AVG_OVER_TIME":                10,
	"FUNCTION_CEIL":                         11,
	"FUNCTION_CHANGES":                      12,
	"FUNCTION_CLAMP":                        13,
	"FUNCTION_CLAMP_MAX":                    14,
	"FUNCTION_CLAMP_MIN":                    15,
	"FUNCTION_COS":                          16,
	"FUNCTION_COSH":                         17,
	"FUNCTION_COUNT_OVER_TIME":              18,
	"FUNCTION_DAY_OF_MONTH":                 19,
	"FUNCTION_DAY_OF_WEEK":                  20,
	"FUNCTION_DAY_OF_YEAR":                  21,
	"FUNCTION_DAYS_IN_MONTH":                22,
	"FUNCTION_DEG":                          23,
	"FUNCTION_DELTA":                        24,
	"FUNCTION_DERIV":                        25,
	"FUNCTION_DOUBLE_EXPONENTIAL_SMOOTHING": 26,
	"FUNCTION_EXP":                          27,
	"FUNCTION_FLOOR":                        28,
	"FUNCTION_HISTOGRAM_AVG":                29,
	"FUNCTION_HISTOGRAM_COUNT":              30,
	"FUNCTION_HISTOGRAM_FRACTION":           31,
	"FUNCTION_HISTOGRAM_QUANTILE":           32,
	"FUNCTION_HISTOGRAM_STDDEV":             33,
	"FUNCTION_HISTOGRAM_STDVAR":             34,
	"FUNCTION_HISTOGRAM_SUM":                35,
	"FUNCTION_HOUR":                         36,
	"FUNCTION_IDELTA":                       37,
	"FUNCTION_INCREASE":                     38,
	"FUNCTION_IRATE":                        39,
	"FUNCTION_LABEL_JOIN":                   40,
	"FUNCTION_LABEL_REPLACE":                41,
	"FUNCTION_LAST_OVER_TIME":               42,
	"FUNCTION_LN":                           43,
	"FUNCTION_LOG10":                        44,
	"FUNCTION_LOG2":                         45,
	"FUNCTION_MAX_OVER_TIME":                46,
	"FUNCTION_MIN_OVER_TIME":                47,
	"FUNCTION_MINUTE":                       48,
	"FUNCTION_MONTH":                        49,
	"FUNCTION_PREDICT_LINEAR":               50,
	"FUNCTION_PRESENT_OVER_TIME":            51,
	"FUNCTION_QUANTILE_OVER_TIME":           52,
	"FUNCTION_RAD":                          53,
	"FUNCTION_RATE":                         54,
	"FUNCTION_RESETS":                       55,
	"FUNCTION_ROUND":                        56,
	"FUNCTION_SGN":                          57,
	"FUNCTION_SIN":                          58,
	"FUNCTION_SINH":                         59,
	"FUNCTION_SORT":                         60,
	"FUNCTION_SORT_BY_LABEL":                76,
	"FUNCTION_SORT_BY_LABEL_DESC":           77,
	"FUNCTION_SORT_DESC":                    61,
	"FUNCTION_SQRT":                         62,
	"FUNCTION_STDDEV_OVER_TIME":             63,
	"FUNCTION_STDVAR_OVER_TIME":             64,
	"FUNCTION_SUM_OVER_TIME":                65,
	"FUNCTION_TAN":                          66,
	"FUNCTION_TANH":                         67,
	"FUNCTION_TIMESTAMP":                    68,
	"FUNCTION_VECTOR":                       69,
	"FUNCTION_YEAR":                         70,
	"FUNCTION_PI":                           71,
	"FUNCTION_SCALAR":                       72,
	"FUNCTION_TIME":                         73,
}

func (Function) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83a6426a31b44db4, []int{0}
}

func init() {
	proto.RegisterEnum("functions.Function", Function_name, Function_value)
}

func init() { proto.RegisterFile("functions.proto", fileDescriptor_83a6426a31b44db4) }

var fileDescriptor_83a6426a31b44db4 = []byte{
	// 771 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xc9, 0x72, 0xdb, 0x46,
	0x10, 0x25, 0x12, 0x45, 0xa1, 0x46, 0x0b, 0x5b, 0xa3, 0x7d, 0x83, 0x12, 0x25, 0x4a, 0x22, 0x25,
	0x51, 0xb4, 0xc5, 0xfb, 0x36, 0x04, 0x86, 0xc0, 0x88, 0xc0, 0x0c, 0x35, 0x33, 0xa0, 0xc8, 0x13,
	0xaa, 0xec, 0x2a, 0x57, 0xf9, 0x22, 0xb9, 0x6c, 0xf9, 0xee, 0x4f, 0x70, 0x95, 0x7f, 0xc2, 0x9f,
	0xe2, 0xa3, 0x8e, 0x3a, 0x5a, 0xd4, 0xc5, 0x47, 0x7d, 0x82, 0x0b, 0xa0, 0x4c, 0xa2, 0x59, 0xd2,
	0x91, 0xef, 0xf5, 0x74, 0xbf, 0x7e, 0xdd, 0x6c, 0x90, 0xca, 0xcb, 0x77, 0xc7, 0x2f, 0x4e, 0x5f,
	0x9d, 0x1c, 0xbf, 0xdd, 0x7a, 0xfd, 0xe6, 0xe4, 0xf4, 0x84, 0x8e, 0xf4, 0x80, 0xcd, 0x8f, 0x13,
	0xa4, 0x5c, 0xbb, 0xfe, 0x45, 0xa7, 0x09, 0xd4, 0x12, 0xe9, 0x59, 0xa1, 0x64, 0x9a, 0xc8, 0xba,
	0x54, 0x47, 0x12, 0x4a, 0x14, 0xc8, 0x58, 0x0f, 0x65, 0x55, 0x03, 0x0e, 0x9d, 0x22, 0x95, 0x22,
	0xc2, 0xa5, 0x85, 0x1f, 0xe8, 0x0a, 0x59, 0x18, 0x00, 0x53, 0xd5, 0xe4, 0x3a, 0xb5, 0x22, 0xe6,
	0xf0, 0x23, 0x9d, 0x24, 0xe3, 0x7d, 0xda, 0x53, 0x06, 0x86, 0x28, 0x25, 0x13, 0x08, 0x0a, 0xe1,
	0x27, 0x1c, 0x66, 0x84, 0x84, 0x61, 0x1c, 0x66, 0x84, 0x0c, 0xe1, 0x67, 0x1c, 0x66, 0x99, 0x84,
	0x32, 0x0e, 0xb3, 0x4c, 0x86, 0x30, 0x42, 0x17, 0xc9, 0x6c, 0x1f, 0x6b, 0x06, 0x05, 0x41, 0x04,
	0xa5, 0xf0, 0xb8, 0x88, 0x60, 0x14, 0xf5, 0xef, 0x85, 0x4c, 0x06, 0xdc, 0xc0, 0x18, 0x4a, 0xec,
	0x45, 0x2c, 0x6e, 0xc0, 0x38, 0x9d, 0x25, 0x14, 0x63, 0x69, 0xcc, 0x5a, 0x30, 0x71, 0x13, 0x2e,
	0x24, 0x54, 0x90, 0x87, 0x59, 0xf3, 0x80, 0xcb, 0x67, 0xbd, 0x4f, 0xd2, 0x65, 0x32, 0x5f, 0x80,
	0x12, 0x64, 0x20, 0xa5, 0x0b, 0x64, 0xa6, 0xc7, 0xfa, 0xac, 0x9d, 0xaa, 0x5a, 0x1a, 0x2b, 0x69,
	0x43, 0x98, 0xa2, 0xf3, 0x64, 0x7a, 0x90, 0x3a, 0xe2, 0xbc, 0x0e, 0xd3, 0x37, 0x31, 0x6d, 0xce,
	0x34, 0xcc, 0x20, 0x6b, 0x7c, 0xd6, 0x36, 0xa9, 0x90, 0xd7, 0xf9, 0x66, 0x91, 0x5a, 0x9f, 0x07,
	0x30, 0x87, 0x3c, 0xf0, 0x79, 0x64, 0x19, 0xcc, 0x0f, 0x60, 0x5a, 0x34, 0x61, 0x81, 0x6e, 0x90,
	0xf5, 0x3e, 0xa6, 0x92, 0x6a, 0xc4, 0x53, 0xde, 0x6a, 0x28, 0xc9, 0xa5, 0x15, 0x2c, 0x4a, 0x4d,
	0xac, 0x94, 0x0d, 0x85, 0x0c, 0x60, 0x11, 0x15, 0xe1, 0xad, 0x06, 0x2c, 0xa1, 0x84, 0xb5, 0x48,
	0x29, 0x0d, 0xcb, 0x48, 0x66, 0x28, 0x8c, 0x55, 0x81, 0x66, 0x71, 0x36, 0x4b, 0x58, 0x41, 0x7e,
	0xf5, 0xb9, 0xdc, 0x39, 0x70, 0xe9, 0x2a, 0x59, 0xba, 0x81, 0xad, 0x69, 0x96, 0x43, 0xb0, 0x7a,
	0x4b, 0xc0, 0x61, 0xc2, 0xa4, 0x15, 0x11, 0x87, 0x5f, 0xd0, 0x46, 0xf7, 0x03, 0x8c, 0xf5, 0x7d,
	0xde, 0x84, 0x5f, 0x6f, 0xa7, 0x9b, 0x4c, 0xc3, 0xda, 0x2d, 0xca, 0x4d, 0x12, 0xc3, 0x6f, 0x68,
	0xf8, 0xa1, 0x4a, 0x34, 0xfc, 0x8e, 0xfe, 0x53, 0xa2, 0x6b, 0xf1, 0x3a, 0x9d, 0x21, 0x93, 0x7d,
	0x50, 0x7a, 0x9a, 0x33, 0xc3, 0xe1, 0x0f, 0x64, 0x94, 0xd0, 0xcc, 0x72, 0xf8, 0x93, 0xce, 0x91,
	0xa9, 0x1e, 0x16, 0xb1, 0x2a, 0x8f, 0xd2, 0x03, 0x25, 0x24, 0xfc, 0x85, 0x74, 0x74, 0x09, 0xcd,
	0x1b, 0x11, 0xf3, 0x38, 0x6c, 0xd0, 0x25, 0x32, 0x57, 0xe0, 0x4c, 0x71, 0xe1, 0x36, 0x69, 0x85,
	0x8c, 0xf6, 0x49, 0x09, 0x7f, 0xa3, 0xb2, 0x91, 0x0a, 0x76, 0xb6, 0xe1, 0x1f, 0xd4, 0x49, 0xa4,
	0x82, 0x5d, 0xf8, 0x17, 0x15, 0x8c, 0x59, 0xab, 0x90, 0x73, 0x0b, 0x73, 0x42, 0x16, 0xb8, 0xff,
	0x90, 0x03, 0xb1, 0x90, 0x89, 0xe5, 0xb0, 0x8d, 0x6a, 0x76, 0xd7, 0x73, 0x07, 0xa9, 0x6e, 0x68,
	0xee, 0x0b, 0xcf, 0xa6, 0x91, 0x90, 0xd9, 0x5e, 0xef, 0x52, 0x97, 0x2c, 0x16, 0xc9, 0x81, 0x3b,
	0xb4, 0x87, 0xa6, 0xfe, 0x7d, 0xd6, 0x85, 0x80, 0x7d, 0xb4, 0x97, 0x9a, 0xf9, 0xf0, 0x3f, 0xea,
	0x31, 0x77, 0xfb, 0x0e, 0xd2, 0x9a, 0x15, 0xb1, 0x06, 0xee, 0x22, 0xad, 0x5a, 0x25, 0xd2, 0x87,
	0x7b, 0x28, 0x9b, 0x09, 0x24, 0xdc, 0xc7, 0x88, 0x90, 0xf0, 0x00, 0xe5, 0xcf, 0xef, 0xdb, 0x43,
	0x0c, 0x29, 0x6d, 0xe1, 0x11, 0xb2, 0x2e, 0x83, 0xd2, 0x6a, 0xbb, 0x3b, 0x4f, 0x88, 0x50, 0x53,
	0x88, 0x4b, 0x7d, 0x6e, 0x3c, 0x88, 0xd1, 0x5d, 0xca, 0x03, 0x72, 0xfc, 0x31, 0xae, 0x73, 0xa8,
	0x2d, 0x3c, 0x41, 0x6b, 0xdd, 0xdd, 0xf5, 0x82, 0x3d, 0x4f, 0x07, 0xe9, 0x26, 0xd3, 0x05, 0xfa,
	0x19, 0x56, 0x99, 0xc4, 0x05, 0x8e, 0xa1, 0xce, 0xb3, 0x9b, 0x5d, 0x45, 0xe5, 0xf3, 0x93, 0xed,
	0x21, 0xa5, 0xd9, 0x3b, 0x63, 0xb3, 0x8b, 0xeb, 0x23, 0xc7, 0x9b, 0xdc, 0xb3, 0x4a, 0x03, 0x47,
	0xef, 0xf3, 0xbb, 0x56, 0x43, 0x5b, 0xdb, 0x10, 0x10, 0xa0, 0x87, 0xc6, 0x63, 0x11, 0xd3, 0x10,
	0xe2, 0xc2, 0x99, 0x3a, 0xb1, 0x36, 0x54, 0x3e, 0x80, 0x83, 0xb5, 0xa1, 0x72, 0x1d, 0xea, 0xd5,
	0xfd, 0xb3, 0x0b, 0xb7, 0x74, 0x7e, 0xe1, 0x96, 0xae, 0x2e, 0x5c, 0xe7, 0x7d, 0xc7, 0x75, 0x3e,
	0x75, 0x5c, 0xe7, 0x73, 0xc7, 0x75, 0xce, 0x3a, 0xae, 0xf3, 0xa5, 0xe3, 0x3a, 0x5f, 0x3b, 0x6e,
	0xe9, 0xaa, 0xe3, 0x3a, 0x1f, 0x2e, 0xdd, 0xd2, 0xd9, 0xa5, 0x5b, 0x3a, 0xbf, 0x74, 0x4b, 0xcf,
	0x87, 0xf3, 0xaf, 0xeb, 0xde, 0xb7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x93, 0x87, 0x59, 0xbc, 0x70,
	0x07, 0x00, 0x00,
}

func (x Function) String() string {
	s, ok := Function_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
