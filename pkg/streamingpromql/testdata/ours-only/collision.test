# SPDX-License-Identifier: AGPL-3.0-only

# Most cases for aggregation operators are covered already in the upstream test cases.
# These test cases cover scenarios not covered by the upstream test cases, such as range queries, or edge cases that are uniquely likely to cause issues in the streaming engine.

load 6m
  metric_1{common="label"} 0 1 _ _ 4 5
  metric_2{common="label"} _ _ 2 3 _ 6
  metric_2{common="other-label"} -1 10 20 30 40 50

# No conflicts, should merge series into one output series.
eval range from 0 to 24m step 6m ceil({__name__=~"metric_.*"})
  {common="label"} 0 1 2 3 4
  {common="other-label"} -1 10 20 30 40

# Same as above, but with conflict at T=30m.
eval_fail range from 0 to 30m step 6m ceil({__name__=~"metric_.*"})
  expected_fail_message vector cannot contain metrics with the same labelset

# Same two cases as above, but with a function that takes a range vector.
#
# This query should succeed, but fails in Prometheus' engine due to https://github.com/prometheus/prometheus/issues/14695.
# Once this bug is fixed, we can move these test cases back to the "ours" directory.
eval range from 0 to 24m step 6m max_over_time({__name__=~"metric_.*"}[5m])
  {common="label"} 0 1 2 3 4
  {common="other-label"} -1 10 20 30 40

eval_fail range from 0 to 30m step 6m max_over_time({__name__=~"metric_.*"}[5m])
  expected_fail_message vector cannot contain metrics with the same labelset
