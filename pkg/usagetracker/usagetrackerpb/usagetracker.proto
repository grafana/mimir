// SPDX-License-Identifier: AGPL-3.0-only

syntax = "proto3";

package usagetrackerpb;

option go_package = "usagetrackerpb";

import "gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

service UsageTracker {
  rpc TrackSeries(TrackSeriesRequest) returns (TrackSeriesResponse);
}

message TrackSeriesRequest {
  // The tenant owning the series.
  string userID = 1;

  // The hashes of the series to track.
  repeated uint64 seriesHashes = 2;
}

message TrackSeriesResponse {
  // The hashes of the series that have been rejected because the tenant is over the limit.
  repeated uint64 rejectedSeriesHashes = 1;
}

message SeriesCreatedEvent {
  // The tenant owning the series.
  string userID = 1;

  // Unix timestamp when this event was emitted.
  int64 timestamp = 2;

  // The hashes of the series to track.
  repeated uint64 seriesHashes = 3;
}