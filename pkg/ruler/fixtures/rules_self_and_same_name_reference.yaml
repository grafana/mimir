groups:
  - name: self_and_same_name_reference
    rules:
      # The two following rules are independent, but they have the same name and they also self reference
      # themselves. The dependency graph is built taking in account the ordering and assuming that a rule
      # can't depend on following rules, but just on previous ones. The concurrent evaluation groups are
      # built accordingly.
      - record: job:http_requests:rate1m
        expr: sum by (job)(rate(http_requests_total{job="job1"}[1m])) or last_over_time(job:http_requests:rate1m{job="job1"}[1m])
      - record: job:http_requests:rate1m
        expr: sum by (job)(rate(http_requests_total{job="job2"}[1m])) or last_over_time(job:http_requests:rate1m{job="job2"}[1m])

      - record: job1:http_requests:rate1m
        expr: job:http_requests:rate1m{job="job1"}
      - record: job1_cluster1:http_requests:rate1m
        expr: job1:http_requests:rate1m{cluster="cluster1"}
      - record: job1_cluster2:http_requests:rate1m
        expr: job1:http_requests:rate1m{cluster="cluster2"}
      - record: job1_cluster1_namespace1:http_requests:rate1m
        expr: job1_cluster1:http_requests:rate1m{namespace="namespace1"}
      - record: job1_cluster1_namespace2:http_requests:rate1m
        expr: job1_cluster1:http_requests:rate1m{namespace="namespace2"}
