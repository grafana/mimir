// SPDX-License-Identifier: AGPL-3.0-only
// Provenance-includes-location: https://github.com/cortexproject/cortex/blob/master/pkg/frontend/v1/frontendv1pb/frontend.proto
// Provenance-includes-license: Apache-2.0
// Provenance-includes-copyright: The Cortex Authors.

syntax = "proto3";

package schedulerpb;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message JobKey {
    string id = 1;
    int64 epoch = 2;
}

message JobSpec {
    string topic = 1;
    int32 partition = 2;
    int64 start_offset = 3;
    int64 end_offset = 4;
    google.protobuf.Timestamp commitRecTs = 5  [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	int64 lastSeenOffset = 6;
    google.protobuf.Timestamp lastBlockEndTs = 7  [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

service BlockBuilderScheduler {
    rpc AssignJob(AssignJobRequest) returns (AssignJobResponse);
    rpc UpdateJob(UpdateJobRequest) returns (UpdateJobResponse);
}

message AssignJobRequest {
    string worker_id = 1;
}

message AssignJobResponse {
    JobKey key = 1;
    JobSpec spec = 2;
}

message UpdateJobRequest {
    JobKey key = 1;
    string worker_id = 2;
    JobSpec spec = 3;
    bool complete = 4;
}

message UpdateJobResponse {}
