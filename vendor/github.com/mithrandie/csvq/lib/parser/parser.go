// Code generated by goyacc -o lib/parser/parser.go -v lib/parser/parser.output lib/parser/parser.y. DO NOT EDIT.

//line lib/parser/parser.y:2
package parser

import __yyfmt__ "fmt"

//line lib/parser/parser.y:2

import (
	"strconv"
	"strings"

	"github.com/mithrandie/csvq/lib/value"
)

//line lib/parser/parser.y:12
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
	bool        bool
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const CONSTANT = 57359
const TABLE_FUNCTION = 57360
const URL = 57361
const SELECT = 57362
const FROM = 57363
const UPDATE = 57364
const SET = 57365
const UNSET = 57366
const DELETE = 57367
const WHERE = 57368
const INSERT = 57369
const INTO = 57370
const VALUES = 57371
const REPLACE = 57372
const AS = 57373
const DUAL = 57374
const STDIN = 57375
const RECURSIVE = 57376
const CREATE = 57377
const ADD = 57378
const DROP = 57379
const ALTER = 57380
const TABLE = 57381
const FIRST = 57382
const LAST = 57383
const AFTER = 57384
const BEFORE = 57385
const DEFAULT = 57386
const RENAME = 57387
const TO = 57388
const VIEW = 57389
const ORDER = 57390
const GROUP = 57391
const HAVING = 57392
const BY = 57393
const ASC = 57394
const DESC = 57395
const LIMIT = 57396
const OFFSET = 57397
const PERCENT = 57398
const JOIN = 57399
const INNER = 57400
const OUTER = 57401
const LEFT = 57402
const RIGHT = 57403
const FULL = 57404
const CROSS = 57405
const ON = 57406
const USING = 57407
const NATURAL = 57408
const LATERAL = 57409
const UNION = 57410
const INTERSECT = 57411
const EXCEPT = 57412
const ALL = 57413
const ANY = 57414
const EXISTS = 57415
const IN = 57416
const AND = 57417
const OR = 57418
const NOT = 57419
const BETWEEN = 57420
const LIKE = 57421
const IS = 57422
const NULL = 57423
const DISTINCT = 57424
const WITH = 57425
const RANGE = 57426
const UNBOUNDED = 57427
const PRECEDING = 57428
const FOLLOWING = 57429
const CURRENT = 57430
const ROW = 57431
const CASE = 57432
const IF = 57433
const ELSEIF = 57434
const WHILE = 57435
const WHEN = 57436
const THEN = 57437
const ELSE = 57438
const DO = 57439
const END = 57440
const DECLARE = 57441
const CURSOR = 57442
const FOR = 57443
const FETCH = 57444
const OPEN = 57445
const CLOSE = 57446
const DISPOSE = 57447
const PREPARE = 57448
const NEXT = 57449
const PRIOR = 57450
const ABSOLUTE = 57451
const RELATIVE = 57452
const SEPARATOR = 57453
const PARTITION = 57454
const OVER = 57455
const COMMIT = 57456
const ROLLBACK = 57457
const CONTINUE = 57458
const BREAK = 57459
const EXIT = 57460
const ECHO = 57461
const PRINT = 57462
const PRINTF = 57463
const SOURCE = 57464
const EXECUTE = 57465
const CHDIR = 57466
const PWD = 57467
const RELOAD = 57468
const REMOVE = 57469
const SYNTAX = 57470
const TRIGGER = 57471
const FUNCTION = 57472
const AGGREGATE = 57473
const BEGIN = 57474
const RETURN = 57475
const IGNORE = 57476
const WITHIN = 57477
const VAR = 57478
const SHOW = 57479
const TIES = 57480
const NULLS = 57481
const ROWS = 57482
const ONLY = 57483
const CSV = 57484
const JSON = 57485
const JSONL = 57486
const FIXED = 57487
const LTSV = 57488
const CSV_INLINE = 57489
const JSON_INLINE = 57490
const JSON_TABLE = 57491
const JSON_ROW = 57492
const SUBSTRING = 57493
const COUNT = 57494
const JSON_OBJECT = 57495
const AGGREGATE_FUNCTION = 57496
const LIST_FUNCTION = 57497
const ANALYTIC_FUNCTION = 57498
const FUNCTION_NTH = 57499
const FUNCTION_WITH_INS = 57500
const COMPARISON_OP = 57501
const STRING_OP = 57502
const SUBSTITUTION_OP = 57503
const UMINUS = 57504
const UPLUS = 57505

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"CONSTANT",
	"TABLE_FUNCTION",
	"URL",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"JSONL",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lib/parser/parser.y:2837

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 221,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	92, 26,
	94, 26,
	96, 26,
	98, 26,
	164, 26,
	-2, 240,
	-1, 27,
	68, 189,
	69, 189,
	70, 189,
	-2, 201,
	-1, 35,
	1, 78,
	92, 78,
	94, 78,
	96, 78,
	98, 78,
	164, 78,
	-2, 253,
	-1, 61,
	68, 190,
	69, 190,
	70, 190,
	-2, 245,
	-1, 123,
	22, 221,
	25, 221,
	27, 221,
	-2, 1,
	-1, 137,
	68, 189,
	69, 189,
	70, 189,
	-2, 201,
	-1, 177,
	1, 123,
	92, 123,
	94, 123,
	96, 123,
	98, 123,
	164, 123,
	-2, 234,
	-1, 178,
	1, 164,
	92, 164,
	94, 164,
	96, 164,
	98, 164,
	164, 164,
	-2, 240,
	-1, 183,
	1, 157,
	92, 157,
	94, 157,
	96, 157,
	98, 157,
	164, 157,
	-2, 240,
	-1, 184,
	1, 158,
	92, 158,
	94, 158,
	96, 158,
	98, 158,
	164, 158,
	-2, 240,
	-1, 185,
	1, 159,
	92, 159,
	94, 159,
	96, 159,
	98, 159,
	164, 159,
	-2, 240,
	-1, 186,
	1, 162,
	92, 162,
	94, 162,
	96, 162,
	98, 162,
	164, 162,
	-2, 234,
	-1, 187,
	1, 163,
	92, 163,
	94, 163,
	96, 163,
	98, 163,
	164, 163,
	-2, 240,
	-1, 190,
	1, 170,
	92, 170,
	94, 170,
	96, 170,
	98, 170,
	164, 170,
	-2, 234,
	-1, 191,
	1, 171,
	92, 171,
	94, 171,
	96, 171,
	98, 171,
	164, 171,
	-2, 240,
	-1, 257,
	92, 1,
	96, 1,
	98, 1,
	-2, 221,
	-1, 282,
	172, 362,
	-2, 489,
	-1, 283,
	172, 363,
	-2, 490,
	-1, 284,
	172, 364,
	-2, 491,
	-1, 285,
	172, 365,
	-2, 492,
	-1, 286,
	172, 366,
	-2, 493,
	-1, 297,
	57, 510,
	-2, 425,
	-1, 334,
	4, 145,
	138, 145,
	139, 145,
	140, 145,
	142, 145,
	143, 145,
	144, 145,
	145, 145,
	146, 145,
	-2, 240,
	-1, 335,
	4, 146,
	138, 146,
	139, 146,
	140, 146,
	142, 146,
	143, 146,
	144, 146,
	145, 146,
	146, 146,
	-2, 240,
	-1, 345,
	1, 175,
	92, 175,
	94, 175,
	96, 175,
	98, 175,
	164, 175,
	-2, 240,
	-1, 352,
	98, 4,
	-2, 221,
	-1, 371,
	74, 0,
	78, 0,
	79, 0,
	80, 0,
	159, 0,
	165, 0,
	-2, 281,
	-1, 372,
	74, 0,
	78, 0,
	79, 0,
	80, 0,
	159, 0,
	165, 0,
	-2, 283,
	-1, 381,
	74, 0,
	78, 0,
	79, 0,
	80, 0,
	159, 0,
	165, 0,
	-2, 293,
	-1, 420,
	98, 1,
	-2, 221,
	-1, 427,
	1, 211,
	55, 211,
	83, 211,
	92, 211,
	94, 211,
	96, 211,
	98, 211,
	101, 211,
	141, 211,
	164, 211,
	173, 211,
	-2, 240,
	-1, 428,
	1, 216,
	92, 216,
	94, 216,
	96, 216,
	98, 216,
	101, 216,
	102, 216,
	164, 216,
	173, 216,
	-2, 240,
	-1, 459,
	68, 190,
	69, 190,
	70, 190,
	-2, 382,
	-1, 480,
	1, 80,
	92, 80,
	94, 80,
	96, 80,
	98, 80,
	164, 80,
	-2, 240,
	-1, 481,
	1, 81,
	92, 81,
	94, 81,
	96, 81,
	98, 81,
	164, 81,
	-2, 234,
	-1, 482,
	1, 82,
	92, 82,
	94, 82,
	96, 82,
	98, 82,
	164, 82,
	-2, 240,
	-1, 483,
	1, 83,
	92, 83,
	94, 83,
	96, 83,
	98, 83,
	164, 83,
	-2, 234,
	-1, 484,
	1, 150,
	92, 150,
	94, 150,
	96, 150,
	98, 150,
	164, 150,
	-2, 234,
	-1, 485,
	1, 151,
	92, 151,
	94, 151,
	96, 151,
	98, 151,
	164, 151,
	-2, 240,
	-1, 486,
	1, 152,
	92, 152,
	94, 152,
	96, 152,
	98, 152,
	164, 152,
	-2, 234,
	-1, 487,
	1, 153,
	92, 153,
	94, 153,
	96, 153,
	98, 153,
	164, 153,
	-2, 240,
	-1, 490,
	1, 118,
	92, 118,
	94, 118,
	96, 118,
	98, 118,
	164, 118,
	174, 118,
	-2, 240,
	-1, 495,
	1, 423,
	92, 423,
	94, 423,
	96, 423,
	98, 423,
	164, 423,
	-2, 240,
	-1, 502,
	1, 176,
	92, 176,
	94, 176,
	96, 176,
	98, 176,
	164, 176,
	-2, 240,
	-1, 534,
	74, 0,
	78, 0,
	79, 0,
	80, 0,
	159, 0,
	165, 0,
	-2, 294,
	-1, 560,
	98, 1,
	-2, 221,
	-1, 567,
	94, 1,
	96, 1,
	98, 1,
	-2, 221,
	-1, 597,
	173, 358,
	174, 358,
	-2, 234,
	-1, 615,
	57, 510,
	-2, 385,
	-1, 655,
	22, 221,
	25, 221,
	27, 221,
	-2, 4,
	-1, 658,
	98, 4,
	-2, 221,
	-1, 659,
	98, 4,
	-2, 221,
	-1, 684,
	173, 263,
	174, 263,
	-2, 190,
	-1, 760,
	92, 4,
	96, 4,
	98, 4,
	-2, 221,
	-1, 765,
	98, 4,
	-2, 221,
	-1, 766,
	98, 4,
	-2, 221,
	-1, 792,
	92, 1,
	96, 1,
	98, 1,
	-2, 221,
	-1, 829,
	20, 521,
	83, 521,
	172, 521,
	-2, 87,
	-1, 837,
	1, 95,
	92, 95,
	94, 95,
	96, 95,
	98, 95,
	164, 95,
	-2, 234,
	-1, 838,
	1, 96,
	92, 96,
	94, 96,
	96, 96,
	98, 96,
	164, 96,
	-2, 240,
	-1, 842,
	98, 6,
	-2, 221,
	-1, 848,
	173, 129,
	174, 129,
	-2, 240,
	-1, 853,
	98, 4,
	-2, 221,
	-1, 923,
	98, 6,
	-2, 221,
	-1, 924,
	98, 6,
	-2, 221,
	-1, 928,
	98, 4,
	-2, 221,
	-1, 932,
	94, 4,
	96, 4,
	98, 4,
	-2, 221,
	-1, 973,
	22, 221,
	25, 221,
	27, 221,
	-2, 6,
	-1, 980,
	164, 62,
	-2, 240,
	-1, 1014,
	92, 6,
	96, 6,
	98, 6,
	-2, 221,
	-1, 1017,
	98, 8,
	-2, 221,
	-1, 1024,
	98, 6,
	-2, 221,
	-1, 1027,
	92, 4,
	96, 4,
	98, 4,
	-2, 221,
	-1, 1041,
	98, 6,
	-2, 221,
	-1, 1066,
	98, 6,
	-2, 221,
	-1, 1070,
	94, 6,
	96, 6,
	98, 6,
	-2, 221,
	-1, 1072,
	22, 221,
	25, 221,
	27, 221,
	-2, 8,
	-1, 1075,
	98, 8,
	-2, 221,
	-1, 1076,
	98, 8,
	-2, 221,
	-1, 1095,
	92, 8,
	96, 8,
	98, 8,
	-2, 221,
	-1, 1100,
	98, 8,
	-2, 221,
	-1, 1101,
	98, 8,
	-2, 221,
	-1, 1112,
	92, 6,
	96, 6,
	98, 6,
	-2, 221,
	-1, 1117,
	98, 8,
	-2, 221,
	-1, 1132,
	98, 8,
	-2, 221,
	-1, 1136,
	94, 8,
	96, 8,
	98, 8,
	-2, 221,
	-1, 1156,
	92, 8,
	96, 8,
	98, 8,
	-2, 221,
}

const yyPrivate = 57344

const yyLast = 4162

var yyAct = [...]int{
	126, 61, 1131, 1096, 1130, 1065, 1104, 1043, 1064, 511,
	927, 429, 503, 761, 1015, 203, 926, 68, 813, 623,
	311, 132, 559, 863, 204, 734, 739, 265, 682, 143,
	643, 939, 301, 862, 626, 510, 26, 646, 292, 605,
	645, 589, 614, 697, 266, 262, 146, 494, 861, 639,
	99, 156, 156, 573, 159, 488, 610, 263, 275, 135,
	740, 444, 558, 364, 509, 25, 449, 448, 296, 367,
	289, 273, 85, 84, 188, 61, 550, 358, 1, 27,
	247, 211, 236, 72, 153, 235, 337, 303, 255, 1018,
	236, 112, 78, 528, 202, 197, 235, 215, 1054, 353,
	343, 250, 236, 901, 902, 235, 111, 80, 137, 80,
	903, 904, 887, 888, 753, 754, 80, 517, 1061, 157,
	122, 165, 710, 711, 61, 1037, 61, 833, 822, 786,
	134, 21, 181, 452, 80, 453, 454, 455, 447, 751,
	750, 450, 112, 959, 747, 143, 258, 731, 728, 305,
	727, 712, 80, 261, 124, 80, 80, 707, 80, 26,
	80, 905, 653, 294, 884, 295, 650, 103, 580, 270,
	79, 526, 79, 354, 178, 442, 194, 179, 180, 79,
	183, 184, 185, 187, 436, 191, 194, 362, 25, 354,
	317, 1036, 291, 236, 708, 1034, 235, 79, 354, 354,
	143, 290, 256, 1033, 1032, 196, 112, 201, 452, 342,
	453, 454, 455, 447, 1030, 79, 450, 354, 79, 79,
	357, 79, 356, 79, 380, 113, 114, 115, 274, 116,
	117, 118, 119, 120, 80, 122, 140, 913, 312, 142,
	315, 139, 1012, 121, 141, 1011, 380, 380, 627, 451,
	1010, 80, 316, 1009, 21, 1005, 196, 1000, 61, 144,
	586, 144, 599, 505, 3, 379, 524, 998, 144, 227,
	226, 228, 229, 230, 378, 997, 113, 114, 115, 137,
	116, 117, 118, 119, 120, 996, 144, 360, 361, 305,
	121, 995, 297, 26, 971, 952, 405, 406, 432, 950,
	1050, 373, 398, 459, 144, 334, 335, 144, 144, 144,
	144, 150, 379, 80, 79, 949, 938, 925, 433, 889,
	886, 859, 25, 619, 345, 835, 127, 35, 832, 642,
	443, 829, 826, 810, 394, 156, 416, 399, 400, 401,
	113, 114, 115, 803, 116, 117, 118, 119, 120, 785,
	768, 749, 746, 61, 730, 709, 675, 440, 674, 143,
	434, 143, 143, 673, 672, 501, 670, 636, 548, 600,
	515, 547, 295, 546, 633, 439, 541, 380, 539, 553,
	61, 537, 477, 380, 380, 463, 144, 3, 21, 625,
	499, 500, 417, 493, 350, 424, 464, 112, 427, 428,
	197, 551, 473, 587, 1049, 351, 217, 525, 380, 552,
	552, 552, 227, 226, 228, 229, 230, 349, 103, 961,
	953, 61, 951, 496, 497, 947, 937, 533, 907, 498,
	893, 871, 869, 535, 536, 143, 868, 867, 520, 865,
	520, 520, 305, 839, 523, 782, 530, 529, 780, 779,
	35, 519, 305, 521, 522, 149, 26, 770, 549, 480,
	482, 485, 487, 490, 713, 144, 685, 662, 490, 495,
	544, 622, 585, 495, 495, 479, 143, 502, 143, 601,
	228, 229, 230, 21, 617, 25, 554, 555, 478, 462,
	438, 437, 556, 154, 149, 260, 648, 595, 254, 563,
	244, 290, 243, 465, 242, 604, 241, 652, 593, 295,
	602, 240, 239, 603, 238, 237, 331, 613, 612, 1072,
	973, 3, 655, 476, 274, 123, 249, 318, 194, 629,
	657, 113, 114, 115, 411, 116, 117, 118, 119, 120,
	574, 699, 591, 329, 1060, 783, 578, 781, 701, 145,
	798, 21, 684, 679, 1024, 924, 778, 923, 842, 677,
	877, 61, 570, 875, 259, 630, 776, 864, 61, 596,
	426, 1101, 624, 575, 680, 663, 632, 634, 777, 154,
	678, 320, 775, 687, 35, 103, 774, 380, 143, 771,
	664, 745, 700, 621, 676, 458, 26, 579, 666, 698,
	669, 1004, 683, 26, 962, 584, 412, 705, 245, 305,
	305, 475, 686, 425, 246, 704, 225, 305, 1155, 1145,
	714, 161, 690, 1140, 576, 25, 1139, 143, 718, 571,
	1134, 1120, 25, 1119, 319, 330, 706, 683, 656, 691,
	1111, 715, 729, 1087, 716, 1079, 695, 703, 1071, 726,
	172, 173, 1068, 742, 1026, 1023, 61, 1022, 984, 61,
	61, 972, 328, 143, 321, 322, 936, 935, 759, 930,
	725, 763, 764, 856, 160, 732, 855, 791, 689, 35,
	162, 654, 380, 564, 3, 562, 1133, 1100, 271, 1076,
	1132, 21, 692, 1075, 624, 1067, 1017, 766, 21, 1066,
	696, 757, 765, 659, 163, 929, 755, 624, 658, 928,
	1132, 561, 352, 1117, 310, 560, 248, 170, 171, 174,
	175, 305, 1066, 305, 305, 305, 1041, 928, 305, 624,
	853, 560, 784, 809, 422, 420, 1156, 1136, 112, 1112,
	624, 794, 797, 802, 615, 804, 1095, 35, 811, 805,
	796, 828, 793, 812, 1070, 816, 1027, 1014, 28, 932,
	617, 61, 792, 760, 567, 461, 61, 61, 648, 847,
	823, 808, 648, 851, 257, 1158, 1114, 1097, 857, 858,
	1029, 490, 1016, 795, 495, 850, 21, 380, 844, 21,
	21, 845, 846, 61, 762, 418, 264, 841, 1152, 1151,
	1138, 393, 395, 873, 143, 1137, 873, 402, 403, 404,
	1093, 991, 990, 872, 591, 878, 876, 934, 933, 305,
	624, 305, 305, 305, 3, 758, 1159, 143, 26, 874,
	1133, 3, 1067, 199, 883, 894, 895, 683, 624, 891,
	882, 143, 929, 61, 830, 831, 561, 1154, 1128, 1110,
	1057, 896, 1025, 897, 61, 617, 880, 25, 909, 825,
	910, 790, 314, 1149, 908, 900, 931, 1091, 1105, 1105,
	1084, 881, 113, 114, 115, 838, 116, 117, 118, 119,
	120, 472, 988, 848, 199, 380, 693, 35, 911, 1127,
	143, 21, 1109, 854, 35, 873, 21, 21, 1125, 1126,
	305, 719, 721, 199, 955, 948, 380, 1153, 1124, 143,
	1108, 956, 1107, 957, 942, 964, 944, 945, 946, 788,
	109, 216, 249, 21, 61, 61, 424, 969, 467, 61,
	1123, 681, 965, 61, 968, 683, 359, 978, 143, 977,
	975, 986, 1082, 963, 985, 989, 979, 1142, 1103, 1083,
	1106, 1106, 1085, 376, 1055, 1019, 683, 375, 377, 538,
	380, 518, 994, 408, 542, 543, 545, 407, 355, 628,
	410, 409, 209, 21, 61, 383, 382, 873, 890, 999,
	827, 1007, 35, 338, 21, 35, 35, 1002, 1006, 208,
	209, 210, 110, 814, 815, 1021, 332, 1020, 611, 821,
	1001, 724, 594, 1028, 452, 1031, 453, 454, 455, 447,
	683, 723, 450, 143, 624, 61, 817, 819, 61, 452,
	615, 453, 454, 455, 609, 61, 608, 1051, 61, 452,
	268, 453, 454, 267, 268, 993, 941, 143, 380, 607,
	1058, 269, 61, 606, 870, 445, 136, 940, 974, 744,
	743, 339, 976, 980, 21, 21, 3, 752, 741, 21,
	987, 199, 380, 21, 800, 801, 1063, 61, 624, 1080,
	1074, 61, 152, 61, 1088, 151, 61, 61, 69, 112,
	1094, 415, 1051, 1098, 1099, 1051, 1051, 35, 683, 214,
	1086, 983, 35, 35, 627, 860, 61, 735, 736, 737,
	738, 61, 61, 1115, 21, 1051, 915, 1113, 1121, 1122,
	1051, 1051, 683, 61, 898, 615, 164, 166, 61, 35,
	849, 843, 840, 748, 651, 1135, 491, 1051, 287, 272,
	1143, 293, 148, 61, 1035, 1144, 1146, 61, 199, 147,
	1147, 435, 1051, 920, 1150, 21, 1051, 1042, 21, 1008,
	702, 568, 148, 441, 1157, 21, 341, 61, 21, 340,
	854, 981, 982, 1161, 1160, 336, 1051, 104, 471, 35,
	107, 5, 21, 107, 104, 103, 207, 492, 1073, 313,
	35, 468, 469, 213, 71, 70, 155, 915, 915, 1116,
	470, 1040, 852, 199, 419, 10, 9, 21, 1090, 590,
	8, 21, 7, 21, 421, 65, 21, 21, 365, 299,
	298, 1013, 304, 113, 114, 115, 306, 116, 117, 118,
	119, 120, 276, 281, 920, 920, 21, 1141, 1118, 1102,
	1081, 21, 21, 1059, 199, 64, 199, 915, 94, 63,
	62, 67, 59, 21, 66, 1042, 198, 919, 21, 60,
	35, 35, 1039, 799, 581, 35, 430, 58, 212, 35,
	86, 577, 1056, 21, 1148, 572, 569, 21, 6, 20,
	19, 73, 169, 17, 920, 647, 807, 644, 915, 1069,
	16, 1045, 489, 15, 14, 133, 11, 21, 915, 1118,
	18, 13, 12, 1046, 916, 1044, 112, 198, 392, 914,
	35, 506, 504, 4, 1089, 915, 2, 0, 1092, 0,
	199, 0, 0, 0, 189, 920, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 920, 0, 0, 919, 919,
	915, 0, 29, 0, 915, 195, 1045, 0, 0, 1045,
	1045, 35, 920, 0, 35, 0, 199, 0, 233, 234,
	1129, 35, 0, 0, 35, 0, 0, 0, 0, 1045,
	0, 138, 251, 252, 1045, 1045, 0, 920, 35, 0,
	0, 920, 112, 0, 0, 0, 915, 0, 919, 0,
	0, 1045, 0, 0, 0, 199, 195, 0, 0, 0,
	0, 0, 133, 35, 0, 0, 1045, 35, 0, 35,
	1045, 122, 35, 35, 0, 0, 0, 200, 0, 0,
	189, 0, 0, 920, 0, 0, 0, 0, 0, 919,
	1045, 199, 35, 0, 0, 0, 0, 35, 35, 919,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 35,
	0, 0, 0, 0, 35, 0, 919, 0, 0, 0,
	0, 0, 0, 958, 112, 347, 0, 0, 200, 35,
	369, 0, 0, 35, 0, 0, 0, 966, 0, 967,
	0, 919, 0, 0, 198, 919, 366, 200, 370, 371,
	372, 457, 374, 35, 0, 381, 0, 384, 385, 386,
	387, 388, 389, 390, 0, 0, 0, 189, 396, 366,
	0, 0, 0, 189, 189, 189, 113, 114, 115, 0,
	116, 117, 118, 119, 120, 413, 0, 919, 0, 0,
	0, 189, 0, 0, 0, 423, 0, 0, 0, 0,
	431, 452, 200, 453, 454, 455, 447, 814, 815, 450,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 198, 0, 0, 446, 0, 0, 0, 0, 0,
	279, 278, 199, 288, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 189, 0, 474,
	0, 0, 0, 0, 0, 199, 0, 0, 113, 114,
	115, 0, 116, 117, 118, 119, 120, 0, 0, 199,
	112, 0, 158, 0, 0, 189, 588, 167, 168, 0,
	176, 177, 0, 0, 279, 278, 182, 0, 0, 0,
	186, 0, 190, 0, 192, 193, 0, 0, 300, 280,
	0, 0, 0, 0, 0, 200, 532, 0, 534, 0,
	189, 0, 0, 0, 0, 0, 0, 637, 199, 641,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	189, 189, 189, 616, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 423,
	113, 114, 115, 565, 116, 117, 118, 119, 120, 0,
	0, 200, 0, 200, 200, 0, 199, 0, 189, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	277, 0, 200, 0, 0, 0, 277, 0, 277, 0,
	277, 0, 0, 198, 0, 0, 0, 0, 323, 324,
	326, 327, 0, 0, 113, 114, 115, 333, 282, 283,
	284, 285, 286, 307, 308, 309, 0, 0, 0, 0,
	0, 0, 223, 232, 231, 222, 221, 224, 220, 198,
	0, 0, 0, 0, 0, 0, 112, 200, 302, 133,
	0, 199, 0, 0, 107, 0, 112, 0, 0, 0,
	0, 363, 0, 368, 0, 0, 0, 366, 0, 0,
	279, 278, 667, 0, 0, 199, 0, 112, 733, 0,
	0, 671, 0, 391, 0, 280, 368, 0, 200, 0,
	200, 279, 278, 80, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 414, 0, 300, 280, 694, 0, 0,
	0, 0, 0, 0, 767, 0, 0, 218, 217, 0,
	277, 431, 0, 219, 227, 226, 228, 229, 230, 0,
	0, 0, 344, 0, 0, 277, 277, 0, 223, 232,
	231, 222, 221, 224, 220, 0, 456, 717, 189, 0,
	277, 0, 0, 460, 0, 0, 79, 0, 0, 0,
	0, 466, 0, 0, 200, 0, 0, 0, 223, 232,
	231, 222, 221, 224, 220, 0, 481, 483, 484, 486,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 277,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 0,
	200, 514, 0, 516, 0, 0, 0, 0, 112, 769,
	392, 113, 114, 115, 0, 282, 283, 284, 285, 286,
	307, 308, 309, 218, 217, 0, 787, 0, 0, 219,
	227, 226, 228, 229, 230, 0, 0, 348, 344, 200,
	0, 0, 0, 112, 0, 302, 0, 0, 0, 806,
	0, 0, 189, 218, 217, 885, 112, 279, 278, 219,
	227, 226, 228, 229, 230, 112, 0, 0, 879, 0,
	0, 300, 280, 0, 0, 200, 0, 0, 906, 279,
	278, 0, 834, 592, 277, 325, 597, 0, 0, 277,
	277, 0, 912, 300, 280, 0, 0, 0, 0, 277,
	0, 0, 0, 423, 0, 618, 899, 460, 0, 620,
	0, 0, 0, 592, 866, 0, 631, 592, 592, 635,
	0, 0, 0, 638, 640, 0, 0, 649, 820, 0,
	0, 0, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 960, 113, 114, 115, 0, 116, 117, 118, 119,
	120, 112, 0, 0, 0, 892, 0, 0, 103, 773,
	970, 0, 0, 0, 0, 660, 661, 0, 0, 112,
	0, 0, 0, 640, 368, 665, 391, 113, 114, 115,
	0, 282, 283, 284, 285, 286, 307, 308, 309, 992,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 113,
	114, 115, 0, 282, 283, 284, 285, 286, 307, 308,
	309, 302, 0, 0, 0, 0, 200, 218, 217, 0,
	954, 0, 0, 219, 227, 226, 228, 229, 230, 189,
	0, 772, 0, 302, 0, 592, 0, 0, 0, 200,
	0, 0, 0, 189, 0, 189, 0, 0, 592, 0,
	0, 0, 0, 200, 0, 0, 277, 277, 0, 133,
	0, 0, 0, 0, 1038, 0, 0, 0, 0, 0,
	592, 0, 0, 640, 0, 0, 0, 0, 631, 0,
	0, 592, 189, 0, 0, 113, 114, 115, 1062, 116,
	117, 118, 119, 120, 0, 0, 0, 0, 0, 756,
	0, 0, 200, 113, 114, 115, 0, 116, 117, 118,
	119, 120, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 278, 431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 280, 223, 232,
	200, 222, 221, 224, 220, 592, 0, 423, 0, 0,
	277, 592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 277, 0, 0, 277, 824, 0, 0, 592,
	0, 818, 0, 0, 0, 592, 592, 0, 0, 133,
	0, 836, 837, 0, 0, 640, 0, 0, 112, 81,
	82, 83, 0, 109, 0, 103, 107, 104, 105, 22,
	75, 106, 0, 0, 80, 0, 0, 37, 38, 0,
	0, 0, 0, 0, 30, 200, 0, 122, 0, 31,
	46, 0, 32, 218, 217, 0, 0, 0, 423, 219,
	227, 226, 228, 229, 230, 0, 0, 0, 0, 200,
	0, 0, 113, 114, 115, 0, 282, 283, 284, 285,
	286, 307, 308, 309, 0, 0, 0, 100, 0, 277,
	277, 101, 0, 0, 0, 110, 112, 79, 0, 0,
	0, 631, 0, 0, 1048, 1047, 302, 921, 0, 0,
	279, 278, 0, 34, 108, 0, 41, 39, 40, 36,
	42, 0, 0, 0, 300, 280, 0, 0, 44, 45,
	512, 513, 0, 49, 50, 51, 52, 43, 54, 55,
	56, 47, 53, 57, 0, 0, 0, 922, 0, 0,
	33, 48, 113, 114, 115, 0, 116, 117, 118, 119,
	120, 640, 0, 0, 121, 90, 93, 91, 92, 95,
	96, 97, 98, 0, 0, 592, 0, 0, 0, 0,
	87, 88, 0, 0, 0, 102, 74, 0, 0, 0,
	0, 0, 0, 112, 81, 82, 83, 0, 109, 0,
	103, 107, 104, 105, 22, 75, 106, 0, 0, 80,
	0, 0, 37, 38, 0, 0, 0, 0, 0, 30,
	0, 0, 122, 0, 31, 46, 0, 32, 0, 592,
	113, 114, 115, 0, 282, 283, 284, 285, 286, 307,
	308, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 0, 302, 0, 101, 0, 0, 112,
	110, 0, 79, 0, 0, 0, 0, 0, 0, 508,
	507, 0, 76, 279, 278, 0, 1052, 1053, 34, 108,
	0, 41, 39, 40, 36, 42, 0, 0, 280, 0,
	0, 0, 0, 44, 45, 512, 513, 77, 49, 50,
	51, 52, 43, 54, 55, 56, 47, 53, 57, 0,
	0, 0, 1077, 1078, 0, 33, 48, 113, 114, 115,
	0, 116, 117, 118, 119, 120, 0, 0, 0, 121,
	90, 93, 91, 92, 95, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 0, 87, 88, 0, 0, 0,
	102, 74, 112, 81, 82, 83, 0, 109, 0, 103,
	107, 104, 105, 22, 75, 106, 0, 0, 80, 0,
	0, 37, 38, 0, 0, 0, 0, 0, 30, 0,
	0, 122, 0, 31, 46, 0, 32, 0, 0, 0,
	0, 0, 0, 113, 114, 115, 0, 282, 283, 284,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 101, 0, 0, 0, 110,
	0, 79, 0, 0, 0, 0, 0, 0, 918, 917,
	0, 921, 0, 0, 0, 0, 0, 34, 108, 0,
	41, 39, 40, 36, 42, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 0, 0, 49, 50, 51,
	52, 43, 54, 55, 56, 47, 53, 57, 0, 0,
	0, 922, 0, 0, 33, 48, 113, 114, 115, 0,
	116, 117, 118, 119, 120, 0, 0, 0, 121, 90,
	93, 91, 92, 95, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 87, 88, 0, 0, 0, 102,
	74, 112, 81, 82, 83, 0, 109, 0, 103, 107,
	104, 105, 22, 75, 106, 0, 0, 80, 0, 0,
	37, 38, 0, 0, 0, 0, 0, 30, 0, 0,
	122, 0, 31, 46, 0, 32, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 101, 0, 0, 0, 110, 0,
	79, 0, 0, 0, 0, 0, 0, 24, 23, 0,
	76, 0, 0, 0, 0, 0, 34, 108, 0, 41,
	39, 40, 36, 42, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 0, 77, 49, 50, 51, 52,
	43, 54, 55, 56, 47, 53, 57, 0, 0, 0,
	0, 0, 0, 33, 48, 113, 114, 115, 0, 116,
	117, 118, 119, 120, 0, 0, 0, 121, 90, 93,
	91, 92, 95, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 87, 88, 0, 0, 0, 102, 74,
	112, 81, 82, 83, 0, 109, 0, 103, 107, 104,
	105, 0, 75, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 122,
	223, 232, 231, 222, 221, 224, 220, 0, 0, 0,
	0, 112, 81, 82, 83, 0, 109, 0, 103, 107,
	104, 105, 0, 75, 106, 279, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 100,
	598, 0, 0, 101, 0, 0, 0, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 101, 218, 217, 0, 110, 0,
	0, 219, 227, 226, 228, 229, 230, 131, 128, 0,
	557, 0, 130, 0, 113, 114, 115, 108, 116, 117,
	118, 119, 120, 0, 0, 0, 121, 90, 93, 91,
	92, 95, 96, 97, 98, 223, 232, 231, 222, 221,
	224, 220, 87, 88, 369, 0, 0, 102, 74, 397,
	0, 0, 0, 130, 0, 113, 114, 115, 0, 116,
	117, 118, 119, 120, 0, 0, 0, 121, 90, 93,
	91, 92, 95, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 87, 88, 0, 0, 0, 102, 74,
	112, 81, 82, 83, 0, 109, 0, 103, 107, 104,
	105, 0, 75, 106, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 122,
	218, 217, 0, 0, 0, 0, 219, 227, 226, 228,
	229, 230, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 101, 0, 0, 0, 110, 0, 79,
	0, 0, 0, 0, 0, 0, 131, 128, 0, 0,
	0, 0, 112, 81, 82, 83, 108, 109, 0, 103,
	107, 104, 105, 0, 75, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 113, 114, 115, 0, 116, 117,
	118, 119, 120, 0, 0, 0, 121, 90, 93, 91,
	92, 95, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 100, 87, 88, 0, 101, 0, 102, 74, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 128,
	0, 0, 0, 0, 0, 0, 0, 206, 108, 112,
	81, 82, 83, 0, 109, 0, 103, 107, 104, 105,
	0, 75, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 122, 0,
	0, 0, 0, 0, 205, 0, 113, 114, 115, 0,
	116, 117, 118, 119, 120, 0, 0, 0, 121, 90,
	93, 91, 92, 95, 96, 97, 98, 0, 0, 0,
	0, 0, 0, 0, 87, 88, 0, 0, 100, 102,
	74, 0, 101, 0, 0, 0, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 128, 0, 0, 0,
	0, 112, 81, 82, 83, 108, 109, 0, 103, 107,
	104, 105, 0, 75, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	122, 0, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 130, 0, 113, 114, 115, 0, 116, 117, 118,
	119, 120, 0, 0, 0, 121, 90, 93, 91, 92,
	95, 96, 97, 98, 0, 0, 0, 0, 0, 0,
	100, 87, 88, 369, 101, 0, 102, 74, 110, 216,
	0, 0, 0, 0, 0, 0, 0, 131, 128, 0,
	0, 0, 0, 112, 81, 82, 83, 108, 109, 0,
	103, 107, 104, 105, 0, 75, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 217, 129,
	0, 0, 122, 219, 227, 226, 228, 229, 230, 0,
	0, 1003, 0, 130, 0, 113, 114, 115, 0, 116,
	117, 118, 119, 120, 0, 0, 0, 121, 90, 93,
	91, 92, 95, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 100, 87, 88, 0, 101, 0, 102, 74,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	128, 0, 0, 0, 0, 112, 81, 82, 83, 108,
	109, 0, 103, 107, 104, 105, 0, 75, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 122, 0, 223, 232, 231, 222,
	221, 224, 220, 0, 0, 130, 0, 113, 114, 115,
	0, 116, 117, 118, 119, 120, 112, 0, 0, 121,
	90, 93, 91, 92, 95, 96, 97, 98, 0, 0,
	279, 278, 0, 0, 100, 87, 88, 0, 101, 0,
	102, 74, 110, 0, 300, 280, 0, 0, 0, 0,
	0, 131, 128, 0, 0, 0, 0, 112, 81, 346,
	83, 108, 109, 0, 103, 107, 104, 105, 0, 75,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 218, 217, 129, 0, 0, 122, 219, 227, 226,
	228, 229, 230, 0, 0, 943, 0, 130, 0, 113,
	114, 115, 0, 116, 117, 118, 119, 120, 112, 0,
	0, 121, 90, 93, 91, 92, 95, 96, 97, 98,
	0, 0, 279, 278, 0, 0, 100, 87, 88, 0,
	101, 0, 102, 125, 110, 0, 300, 280, 0, 0,
	0, 0, 0, 131, 128, 0, 0, 0, 0, 0,
	113, 114, 115, 108, 282, 283, 284, 285, 286, 307,
	308, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 130,
	0, 113, 114, 115, 0, 116, 117, 118, 119, 120,
	0, 0, 0, 121, 90, 93, 91, 92, 95, 96,
	97, 98, 582, 583, 0, 0, 0, 0, 0, 87,
	88, 0, 0, 0, 102, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 232, 231, 222, 221, 224,
	220, 0, 113, 114, 115, 0, 282, 283, 284, 285,
	286, 307, 308, 309, 0, 0, 0, 218, 217, 527,
	0, 0, 0, 219, 227, 226, 228, 229, 230, 0,
	0, 789, 0, 0, 0, 0, 302, 223, 232, 231,
	222, 221, 224, 220, 0, 0, 0, 0, 0, 223,
	232, 231, 222, 221, 224, 220, 0, 418, 0, 0,
	0, 0, 223, 232, 231, 222, 221, 224, 220, 0,
	566, 0, 0, 0, 0, 0, 0, 0, 223, 218,
	217, 222, 221, 224, 220, 219, 227, 226, 228, 229,
	230, 223, 232, 231, 222, 221, 224, 220, 0, 0,
	0, 0, 0, 223, 668, 231, 222, 221, 224, 220,
	0, 0, 0, 0, 0, 223, 531, 231, 222, 221,
	224, 220, 218, 217, 0, 0, 0, 0, 219, 227,
	226, 228, 229, 230, 218, 217, 0, 0, 0, 0,
	219, 227, 226, 228, 229, 230, 0, 218, 217, 0,
	0, 0, 0, 219, 227, 226, 228, 229, 230, 0,
	0, 0, 0, 218, 217, 0, 0, 0, 0, 219,
	227, 226, 228, 229, 230, 0, 218, 217, 0, 0,
	0, 0, 219, 227, 226, 228, 229, 230, 218, 217,
	0, 0, 0, 0, 219, 227, 226, 228, 229, 230,
	218, 217, 0, 0, 0, 0, 219, 227, 226, 228,
	229, 230,
}

var yyPact = [...]int{
	2827, -1000, 361, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3671, 3579, -1000, -1000, 998, 214, 1111,
	283, 1036, 1033, 407, 2067, -1000, 574, 1161, 1154, 2085,
	2085, 610, 2085, 3579, -1000, -1000, 3579, 3579, 1762, 3579,
	3579, 3579, 3579, 3579, 3579, -1000, 2085, 2085, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 367, -1000,
	-1000, -1000, -1000, -1000, 3206, -1000, 3298, 1170, 921, 1055,
	839, -1000, -1000, -1000, -1000, -1000, 3967, 3579, 3579, -90,
	343, 342, 340, 339, -1000, 334, 332, 330, 328, 449,
	137, 3579, 3579, -1000, -1000, -1000, -1000, -1000, 2085, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 326, -87, 2827, 679, 3206, -1000, -1000, 323, 322,
	321, 3579, 702, 3967, -1000, 979, 990, 998, 1111, 1101,
	2565, 1100, 1542, -1000, 136, 1131, 1105, 1164, 2392, 3579,
	2565, 771, 2565, -1000, 839, 16, 366, -1000, 534, -1000,
	2085, 1972, 2085, 2085, 497, 470, -1000, 931, -1000, 2085,
	-1000, -1000, -1000, -1000, 3579, 3579, 1144, 21, 918, 1005,
	1138, -1000, 1135, -1000, -1000, 35, -90, -1000, -1000, 3081,
	-90, -1000, -1000, 3763, 3579, 1784, 244, 221, 232, 293,
	1131, 615, 25, 894, 1164, 321, -1000, -1000, 865, 865,
	865, -1000, 13, 2085, -1000, 3395, -1000, 3579, 3579, 3579,
	845, 3579, 879, 93, 3579, 904, 3579, 3579, 3579, 3579,
	3579, 3579, 3579, -1000, -1000, 1924, 3487, 3579, 2996, 839,
	839, 839, 3579, 3579, 3579, 93, 93, 889, 899, -1000,
	-1000, 3954, -1000, 454, 3579, 1075, -1000, 2827, 221, 219,
	3579, 701, 639, 638, 3579, 512, 468, 3579, 3579, 3579,
	979, 1131, 2565, 1118, 10, -1000, -1000, -1000, -1000, 319,
	-1000, 318, -1000, -1000, -1000, -1000, -1000, 2565, 2392, 1132,
	1, 1105, 996, 3579, -1000, -1, -1000, 75, 1450, -1000,
	-1000, -1000, 1793, -1000, -1000, 734, 317, -1000, -1000, -1000,
	212, -1000, 331, 2085, 851, 1145, 3579, 1164, 3579, 510,
	351, 316, 303, -1000, -1000, -1000, -1000, -1000, 3579, 3579,
	3579, 3579, 3579, 1098, -1000, -1000, 1172, 3579, 3579, 1158,
	1158, 2565, 3579, 3579, 3579, -1000, 3579, 3967, -1000, -1000,
	-1000, -1000, 2489, 2085, 1164, 2085, 43, 887, 293, -1000,
	293, 293, 1055, 235, -1000, -3, 3938, -1000, -82, -1000,
	103, 246, 246, 911, 3991, 3579, 93, 3579, -1000, 3206,
	-1000, 246, 93, 93, 312, 312, -1000, -1000, -1000, 2194,
	3954, -1000, -1000, 208, 3579, 205, 1678, -1000, 203, 3579,
	3395, 3579, 200, 198, 195, -1000, -1000, 93, 229, 229,
	229, 845, -1000, 2956, -1000, -1000, 619, -1000, 3579, 587,
	2827, 585, 3579, 3925, 669, 1129, 522, 484, 457, -1000,
	-6, 3870, 504, 1105, 231, 1368, 2565, 3579, 3037, 197,
	1105, 2392, 1772, 996, 993, 988, 3967, 969, 967, 939,
	961, 1596, -1000, -1000, -1000, -1000, -1000, 2085, 150, 734,
	-1000, 2085, 3579, -1000, 299, 1368, 217, 896, 393, 202,
	1368, 2085, 194, -1000, 3967, 138, 2085, 136, 156, 2085,
	-1000, -90, -1000, -90, -90, -1000, -90, -1000, -1000, -8,
	1093, 1164, -1000, -1000, -1000, -12, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 583, 358, -1000, -1000, 3671, 3579, -1000,
	-1000, -1000, -1000, -1000, 611, -1000, 606, 2085, 2085, 903,
	-1000, -1000, 903, -1000, 295, 2085, 3395, 2085, 1292, -1000,
	-1000, 3579, 3979, -1000, 246, -1000, -1000, 487, 193, -1000,
	3579, -1000, 191, 190, 185, 183, 481, 446, 440, 856,
	-1000, 140, -1000, 294, -1000, -1000, 509, 3579, 580, 635,
	2827, 3579, 796, -1000, -1000, 3967, 3579, 2827, -1000, 3579,
	-1000, -1000, 458, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3579, 409, -1000, -1000, 1128, 996, 93, 87, -1000, 1131,
	-17, 29, -79, -1000, 182, -51, -23, -90, -87, 292,
	1368, -1000, 1105, -1000, 993, -1000, 3579, 3579, 3814, 3722,
	954, -1000, 944, 939, -1000, 946, 137, -24, -1000, -1000,
	-1000, -26, 1368, 181, -27, 2085, 136, -1000, -1000, 1057,
	2085, 1014, -1000, 1368, 1004, 1003, 478, -1000, -1000, 179,
	-30, -1000, 1092, 178, -34, -1000, -1000, -35, 1013, -59,
	3579, 2085, -1000, 3579, 732, 2489, 668, 700, 2489, 2489,
	605, 600, 136, 177, -1000, -1000, -1000, 3954, 3579, 285,
	476, 1978, 473, 469, 453, 443, 277, 276, 408, 273,
	406, 93, 176, -45, -1000, 3579, -1000, 835, 3808, 770,
	579, -1000, 667, -1000, 3913, 689, 484, 975, -1000, 412,
	-1000, 1024, -1000, 993, -1000, 170, 1105, 1368, 3579, -1000,
	-1000, 3579, 1772, 1368, 160, -1000, 998, 3967, -1000, 971,
	137, 1473, 137, 2234, 1981, 942, -46, 1596, 3579, 159,
	915, 1368, 158, -1000, -1000, -1000, -1000, 1368, 1368, 155,
	-47, 3579, 152, 2085, 3579, 271, 1091, 2085, 426, 1090,
	1164, 1164, 3579, 1089, 1164, -1000, -1000, -1000, -1000, -1000,
	2489, 634, 3579, 578, 575, 2489, 2489, 148, 1064, 3954,
	455, 267, -1000, 3579, 265, 264, 260, 995, 259, 455,
	455, 450, 455, 447, -1000, -1000, 93, 1814, -1000, -1000,
	-1000, 765, 2827, -1000, -1000, 3579, 458, -1000, -1000, -1000,
	-1000, -1000, 998, 135, -1000, -1000, 3967, 147, -61, 146,
	913, 979, -1000, -1000, 3579, 258, 929, 1473, 137, 971,
	137, 1959, 1596, -1000, -70, -63, 132, 256, -1000, 1063,
	-1000, -1000, 1057, 2085, 3967, -1000, -1000, -90, -1000, 455,
	136, -1000, 2658, 425, -1000, -1000, -1000, 1013, -1000, 423,
	144, 613, 571, 2489, 664, 725, 724, 569, 568, -1000,
	254, 143, -1000, 999, 985, 455, 3632, 455, 455, 455,
	253, 455, 142, 998, 126, 250, 122, 248, -1000, 3579,
	-1000, 754, -1000, 979, 93, -1000, -1000, -1000, 3579, 114,
	247, 503, 3967, 2085, -1000, -1000, 929, -1000, 971, 137,
	-1000, -1000, 3579, -1000, 3579, 93, -1000, 1368, 136, -1000,
	-1000, 121, -1000, 563, 356, -1000, -1000, 3671, 3579, -1000,
	-1000, 3298, 3579, 2658, 2658, 1060, 560, 631, 2489, 3579,
	792, -1000, 2489, -1000, -1000, 719, 718, 136, -1000, -1000,
	984, 3579, 118, -1000, 112, 102, 94, 998, 84, -1000,
	-1000, 455, -1000, 455, 3448, -1000, 500, -1000, 82, 93,
	-1000, 1368, 1127, 80, -1000, -1000, 77, 72, -1000, 69,
	-1000, -1000, -1000, 2658, 662, 688, 599, 15, 881, 1164,
	-1000, 559, 557, 422, 761, 556, -1000, 661, -1000, 686,
	-1000, -1000, 41, 3579, -1000, -1000, -1000, -1000, -1000, 31,
	-1000, 30, 22, -1000, 1112, -1000, -1000, 18, -1000, -1000,
	-1000, -1000, 96, -1000, 2658, 630, 3579, 2314, 2085, 2085,
	24, 880, -1000, -1000, 2658, -1000, 759, 2489, -1000, 3579,
	-1000, 404, -1000, -1000, -1000, -1000, 89, 93, -1000, 603,
	554, 2658, 659, 550, 355, -1000, -1000, 3671, 3579, -1000,
	-1000, -1000, 596, 592, 2085, 2085, 547, -1000, 750, -1000,
	864, 93, -1000, -1000, 545, 626, 2658, 3579, 777, -1000,
	2658, 717, 2314, 651, 683, 2314, 2314, 590, 474, -1000,
	-1000, -1000, 863, 826, 824, 803, -1000, 758, 542, -1000,
	644, -1000, 682, -1000, -1000, 2314, 617, 3579, 535, 533,
	2314, 2314, 855, 822, -1000, 812, 800, -1000, -1000, -1000,
	-1000, 757, 2658, -1000, 3579, 594, 532, 2314, 642, 712,
	707, 528, 525, 862, -1000, -1000, -1000, -1000, -1000, 740,
	521, 614, 2314, 3579, 773, -1000, 2314, -1000, -1000, 706,
	705, -1000, 820, -1000, -1000, 756, 520, -1000, 641, -1000,
	681, -1000, -1000, -1000, -1000, 735, 2314, -1000, 3579, -1000,
	738, -1000,
}

var yyPgo = [...]int{
	0, 78, 12, 237, 7, 263, 9, 1306, 64, 24,
	35, 1303, 1302, 1301, 1299, 404, 300, 1295, 1294, 1293,
	1292, 1291, 1290, 1286, 60, 26, 25, 1284, 1283, 1282,
	55, 1280, 37, 1277, 1275, 40, 30, 1273, 1272, 1271,
	1270, 1269, 1171, 1268, 79, 92, 1332, 549, 46, 38,
	61, 39, 31, 27, 43, 1266, 1265, 53, 1261, 44,
	758, 1258, 81, 1257, 73, 72, 106, 1260, 130, 69,
	50, 28, 11, 1256, 1254, 1253, 0, 1249, 76, 1244,
	1242, 1241, 564, 1240, 1239, 1238, 1235, 33, 48, 23,
	1233, 1230, 6, 1229, 1227, 58, 1223, 1222, 1216, 1212,
	87, 70, 71, 1210, 32, 42, 292, 1209, 18, 1208,
	1205, 21, 57, 1204, 19, 20, 47, 68, 49, 63,
	1202, 1200, 1199, 41, 1196, 1195, 22, 62, 10, 16,
	5, 8, 2, 4, 45, 1194, 13, 1192, 14, 1191,
	3, 1189, 1567, 17, 15, 326, 1186, 84, 1078, 1185,
	1184, 83, 97, 80, 67, 56, 66, 77, 1183, 34,
	616, 1179,
}

var yyR1 = [...]int{
	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 28, 29, 29,
	30, 30, 31, 31, 31, 31, 32, 33, 33, 34,
	35, 35, 36, 36, 36, 37, 37, 37, 37, 37,
	38, 38, 38, 38, 38, 38, 38, 39, 39, 39,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 41, 41, 41, 42, 42, 42,
	42, 43, 43, 43, 43, 44, 44, 44, 44, 45,
	45, 46, 47, 48, 48, 49, 49, 50, 50, 51,
	51, 52, 52, 53, 53, 53, 54, 54, 54, 55,
	55, 56, 56, 57, 57, 57, 58, 58, 58, 59,
	59, 60, 60, 61, 61, 62, 62, 63, 63, 63,
	63, 63, 64, 65, 66, 66, 66, 66, 66, 67,
	67, 67, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 69, 70, 70, 70, 71, 71, 72, 72, 73,
	73, 74, 74, 74, 75, 75, 76, 77, 78, 78,
	78, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	80, 80, 80, 80, 80, 80, 80, 81, 81, 81,
	81, 82, 82, 83, 83, 83, 83, 83, 83, 83,
	83, 84, 84, 84, 84, 84, 84, 85, 85, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 87, 88, 88, 89, 89, 90, 90, 91, 91,
	91, 92, 92, 92, 93, 93, 94, 94, 95, 95,
	95, 95, 96, 96, 96, 96, 96, 98, 98, 98,
	97, 97, 97, 97, 99, 99, 99, 99, 100, 100,
	103, 103, 104, 104, 104, 105, 105, 105, 105, 106,
	106, 106, 106, 106, 106, 106, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 108, 108, 109, 109,
	109, 109, 110, 111, 111, 112, 112, 113, 113, 114,
	114, 115, 115, 116, 116, 117, 117, 101, 101, 102,
	102, 118, 118, 119, 119, 120, 120, 120, 120, 121,
	122, 123, 123, 124, 124, 124, 124, 124, 124, 124,
	124, 125, 125, 126, 126, 127, 127, 128, 128, 129,
	129, 130, 130, 131, 131, 132, 132, 133, 133, 134,
	134, 135, 135, 136, 136, 137, 137, 138, 138, 139,
	139, 140, 140, 141, 141, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 143, 144, 144, 145, 146, 146,
	147, 147, 148, 149, 150, 151, 152, 152, 153, 153,
	154, 154, 155, 155, 156, 156, 156, 157, 157, 158,
	158, 159, 159, 160, 160, 161, 161,
}

var yyR2 = [...]int{
	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 7, 9, 6,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 3, 1, 3,
	1, 3, 4, 2, 4, 3, 1, 1, 3, 3,
	1, 3, 1, 1, 3, 9, 10, 10, 12, 3,
	0, 1, 1, 1, 1, 2, 2, 5, 6, 3,
	4, 4, 4, 4, 4, 4, 2, 2, 2, 2,
	4, 4, 2, 2, 2, 4, 1, 2, 2, 4,
	2, 2, 1, 2, 2, 3, 4, 3, 5, 4,
	6, 8, 10, 9, 11, 5, 4, 4, 4, 1,
	1, 3, 2, 0, 2, 0, 2, 0, 3, 0,
	2, 0, 3, 1, 6, 5, 0, 1, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 6, 9, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 3, 1, 6, 1, 3, 1, 3, 2,
	4, 0, 1, 1, 1, 1, 3, 3, 3, 1,
	6, 3, 3, 3, 3, 4, 4, 5, 6, 6,
	3, 4, 4, 3, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 2, 2, 3, 3, 2,
	2, 0, 1, 4, 4, 6, 8, 3, 4, 4,
	4, 5, 5, 5, 5, 5, 1, 5, 10, 8,
	9, 9, 9, 9, 9, 9, 8, 8, 10, 8,
	10, 2, 1, 5, 0, 3, 2, 5, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 1, 1, 1,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 6, 6, 8, 6, 8, 6, 8, 1, 1,
	1, 1, 1, 2, 3, 1, 2, 3, 4, 1,
	2, 3, 1, 1, 1, 3, 4, 5, 6, 5,
	6, 5, 6, 7, 6, 7, 2, 4, 1, 3,
	1, 3, 5, 0, 1, 4, 5, 0, 2, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 6, 9, 5, 8, 7,
	3, 1, 3, 10, 13, 9, 12, 9, 12, 8,
	11, 5, 6, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 1, 3,
	1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 1, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 1, 1, 1, 0, 3,
}

var yyChk = [...]int{
	-1000, -1, -7, -5, -11, -42, -43, -120, -121, -124,
	-125, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 91, 90, -8, -10, -44, -60, -46,
	30, 35, 38, 136, 99, -145, 105, 23, 24, 103,
	104, 102, 106, 123, 114, 115, 36, 127, 137, 119,
	120, 121, 122, 128, 124, 125, 126, 129, -63, -80,
	-77, -76, -83, -84, -86, -110, -79, -81, -143, -148,
	-149, -150, -151, -39, 172, 16, 93, 118, -45, 83,
	20, 5, 6, 7, -64, -65, -67, 166, 167, -142,
	151, 153, 154, 152, -85, 155, 156, 157, 158, -70,
	73, 77, 171, 11, 13, 14, 17, 12, 100, 9,
	81, -66, 4, 138, 139, 140, 142, 143, 144, 145,
	146, 150, 33, 164, -68, 172, -76, -145, 91, 30,
	136, 90, -111, -67, -68, -52, 48, -44, -46, 27,
	22, 30, 25, -76, 172, -47, -48, 28, 21, 172,
	28, 39, 39, -147, 172, -146, -143, -147, -142, -143,
	100, 47, 106, 130, -148, -151, -148, -142, -142, -38,
	107, 108, 40, 41, 109, 110, -142, -142, -68, -68,
	-68, -151, -142, -68, -68, -68, -142, -68, -115, -67,
	-142, -68, -142, -142, 161, -67, -68, -115, -42, -60,
	-46, -68, -143, -144, -9, 136, 99, 6, 68, 69,
	70, -62, -61, -158, 34, -152, 82, 160, 159, 165,
	80, 78, 77, 74, 79, -160, 167, 166, 168, 169,
	170, 76, 75, -67, -67, 175, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 159, 165, -153, -160, 77,
	-76, -67, -67, -142, 172, 175, -1, 95, -115, -82,
	172, -111, -134, -112, 94, -53, -59, 54, 55, 51,
	-52, -47, 28, -102, -100, -95, -97, -142, 19, 18,
	33, -96, 142, 143, 144, 145, 146, 28, 21, -101,
	-95, -48, -49, 26, -144, -143, -117, -106, -103, -107,
	32, -104, 172, -100, -99, -76, -98, 147, 148, 149,
	-82, -115, -100, -161, 91, -100, -152, 174, 161, 100,
	47, 130, 131, -142, -142, 33, -142, -142, 165, 46,
	165, 46, 65, -142, -68, -68, 21, 65, 65, 46,
	21, 21, 174, 65, 174, -68, 6, -67, 173, 173,
	173, 173, 97, 74, 174, 74, -143, -144, -157, 71,
	-157, -157, 174, -142, -119, -109, -67, -69, -142, 168,
	-67, -67, -67, -153, -67, 78, 74, 79, -70, 172,
	-76, -67, 72, 71, -67, -67, -67, -67, -67, -67,
	-67, -142, 6, -82, -152, -82, -67, 173, -119, -152,
	-152, -152, -82, -82, -82, -70, -70, 78, 74, 72,
	71, 80, 152, -67, -142, 6, -1, 173, 94, -135,
	96, -113, 96, -67, -68, 101, 102, -68, -68, -72,
	-73, -67, -53, -48, -100, 23, 174, 172, 172, -100,
	-117, 21, 174, -49, -50, 49, -67, 63, -154, -156,
	66, 174, 58, 60, 61, 62, -142, 31, -106, -76,
	-142, 31, 172, 173, 65, 172, -142, 77, 36, 37,
	45, 23, -82, -147, -67, 101, 172, 31, 172, 172,
	-68, -142, -68, -142, -142, -68, -142, -68, -30, -29,
	-68, 28, 5, -30, -116, -68, -151, -151, -100, -116,
	-116, -115, -68, -2, -12, -5, -13, 91, 90, -8,
	-10, -6, 116, 117, -142, -144, -142, 74, 74, -45,
	-44, -45, -45, -62, 31, 172, 174, 31, 175, -64,
	-65, 75, -67, -70, -67, -70, -70, 173, -82, 173,
	21, 173, -82, -82, -69, -82, 173, 173, 173, -70,
	-78, 172, -76, 150, -78, -78, -153, 174, -127, -126,
	96, 92, 98, -1, 98, -67, 95, 95, 22, -55,
	40, 107, -56, -57, 56, 89, 140, -58, 89, 140,
	174, -74, 52, 53, 101, -49, 29, 172, -42, -123,
	-122, -66, -142, -102, -82, -95, -68, -142, 33, 65,
	172, -49, -117, -101, -50, -51, 50, 51, 57, 57,
	-155, 59, -154, -156, -105, -106, 67, -104, -142, 173,
	-142, -68, 172, -114, -66, 172, -159, 31, 73, -24,
	172, -142, -66, 172, -66, -142, 173, -42, -142, -118,
	-142, -42, 173, -36, -33, -35, -32, -34, -143, -142,
	174, 31, -144, 174, 98, 164, -68, -111, 97, 97,
	-142, -142, 172, -118, -119, -142, -69, -67, 75, 113,
	173, -67, 173, 173, 173, 173, 113, 113, 134, 113,
	134, 75, -71, -70, -76, 172, 103, 74, -67, 98,
	-127, -1, -68, 90, -67, -1, -68, -54, 141, 83,
	-72, 139, 22, -50, -71, -114, -48, 174, 165, 173,
	173, 174, 174, 172, -114, -49, -51, -67, -115, -106,
	67, -106, 67, 57, 57, -155, -104, 174, 174, -114,
	173, 174, -118, -42, -26, 40, 41, 42, 43, -25,
	-24, 44, -114, 46, 46, 113, 173, 174, 31, 173,
	174, 174, 44, 173, 174, -30, -142, -116, 93, -2,
	95, -136, 94, -2, -2, 97, 97, -42, 173, -67,
	172, 113, 173, 101, 113, 113, 113, 135, 113, 172,
	172, 139, 172, 139, -70, 173, 174, -67, 84, 173,
	91, 98, 95, -112, -134, 94, -57, -59, 138, -75,
	40, 41, -51, 173, -49, -123, -67, -82, -95, -114,
	173, -52, -104, -108, 64, 65, -104, -106, 67, -106,
	67, 57, 174, -105, -142, -68, 173, 65, -114, 173,
	-66, -66, 173, 174, -67, 173, -142, -142, -68, 172,
	31, -118, 132, 31, -32, -35, -35, -143, -68, 31,
	-36, -2, -137, 96, -68, 98, 98, -2, -2, 173,
	31, -88, -87, -89, 112, 172, -67, 172, 172, 172,
	49, 172, -87, -89, -88, 113, -87, 113, -71, 174,
	91, -1, -54, -52, 29, -42, 173, 173, 174, 173,
	65, -53, -67, 172, -108, -108, -104, -104, -106, 67,
	-105, 173, 174, 173, 174, 29, -42, 172, -159, -26,
	-25, -88, -42, -3, -14, -5, -18, 91, 90, -15,
	-16, 93, 133, 132, 132, 173, -129, -128, 96, 92,
	98, -2, 95, 93, 93, 98, 98, 172, 173, -52,
	48, 51, -88, 173, -88, -88, -88, 172, -87, 173,
	173, 172, 173, 172, -67, -126, -53, -71, -82, 29,
	-42, 172, 101, -118, -108, -104, -82, -82, -71, -114,
	-42, 173, 98, 164, -68, -111, -68, -143, -144, -9,
	-68, -3, -3, 31, 98, -129, -2, -68, 90, -2,
	93, 93, -42, 51, -115, 173, 173, 173, 173, -52,
	173, -88, -87, 173, 101, 173, -71, -114, 22, 173,
	173, 173, 173, -3, 95, -138, 94, 97, 74, 74,
	-143, -144, 98, 98, 132, 91, 98, 95, -136, 94,
	173, -72, 173, 173, 173, 22, 173, 29, -42, -3,
	-139, 96, -68, -4, -17, -5, -19, 91, 90, -15,
	-16, -6, -142, -142, 74, 74, -3, 91, -2, -90,
	140, 29, -42, -71, -131, -130, 96, 92, 98, -3,
	95, 98, 164, -68, -111, 97, 97, -142, -142, 98,
	-128, -91, 78, 85, 6, 88, -71, 98, -131, -3,
	-68, 90, -3, 93, -4, 95, -140, 94, -4, -4,
	97, 97, -93, 85, -92, 6, 88, 86, 86, 89,
	91, 98, 95, -138, 94, -4, -141, 96, -68, 98,
	98, -4, -4, 75, 86, 86, 87, 89, 91, -3,
	-133, -132, 96, 92, 98, -4, 95, 93, 93, 98,
	98, -94, 85, -92, -130, 98, -133, -4, -68, 90,
	-4, 93, 93, 87, 91, 98, 95, -140, 94, 91,
	-4, -132,
}

var yyDef = [...]int{
	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 413, 46, 47, -2, 0, 193,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 140, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 172, 0, 0, 242, 243,
	244, -2, 246, 247, 248, 249, 250, 251, 252, 254,
	255, 256, 257, 258, 0, 260, 0, 39, 0, 519,
	506, 227, 228, 229, 230, 231, 0, 0, 0, 234,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 508,
	0, 0, 0, 494, 502, 503, 504, 505, 0, 232,
	233, 239, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 0, -2, 240, 311, 245, 253, 0, 0,
	0, 413, 0, 414, 240, 219, 0, -2, 193, 0,
	0, 0, 0, 190, 0, 193, 195, 0, 0, 311,
	0, 525, 0, 76, 506, 500, 498, 77, 0, 79,
	0, 0, 0, 0, 0, 0, 84, 108, 110, 0,
	141, 142, 143, 144, 0, 0, 0, -2, -2, 240,
	240, 156, 168, -2, -2, -2, -2, -2, 167, 421,
	-2, -2, 173, 174, 0, 0, 240, 0, 0, 0,
	193, 240, 252, 0, 0, 37, 38, 40, 517, 517,
	517, 222, 225, 0, 520, 0, 507, 0, 523, 524,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 0, 311, 311, 0, 506,
	506, 506, 311, 311, 311, 523, 524, 0, 0, 509,
	299, 309, 310, 0, 0, 0, 3, -2, 0, 0,
	311, 0, 471, 417, 0, 177, 203, 0, 0, 0,
	219, 193, 0, 0, 429, 378, 379, 358, 359, 0,
	361, 0, -2, -2, -2, -2, -2, 0, 0, 0,
	427, 195, 197, 0, 192, 495, 194, -2, 389, 392,
	393, 394, 0, 380, 381, 382, 0, 367, 368, 369,
	0, 312, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 111, 116, 117, 125, 139, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 228, 497, 241, 259,
	262, 276, -2, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 519, 0, 191, 433, 408, 410, 234, 261,
	277, -2, -2, 0, 0, 0, 0, 0, 290, 0,
	263, -2, 0, 0, 300, 301, 302, 303, 304, 307,
	308, 235, 237, 0, 311, 0, 421, 317, 0, 311,
	311, 311, 0, 0, 0, 282, 284, 0, 0, 0,
	0, 508, 149, 0, 236, 238, 455, 319, 0, 0,
	-2, 0, 0, 0, 240, 0, 0, -2, -2, 202,
	267, 271, 179, 195, 0, 0, 0, 311, 0, 0,
	195, 0, 0, 197, 199, 0, 196, 0, 0, 512,
	510, 0, 511, 514, 515, 516, 390, 0, 510, -2,
	383, 0, 0, 320, 0, 0, 521, 0, 0, 0,
	0, 0, 0, 501, 499, 0, 0, 0, 0, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, 109, 120,
	-2, 0, 122, 124, 165, -2, 154, 155, 169, 160,
	161, 422, -2, 0, 0, 41, 42, 0, 413, 51,
	52, 53, 28, 29, 0, 496, 0, 0, 0, 186,
	189, 187, 188, 226, 0, 0, 0, 0, 0, 285,
	286, 0, 0, 291, -2, 295, 297, 313, 0, 314,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 279, 0, 296, 298, 0, 0, 0, 455,
	-2, 0, 0, 472, 412, 418, 0, -2, 178, 0,
	209, 210, 206, 212, 213, 214, 215, 220, 217, 218,
	0, 269, 272, 273, 0, 197, 0, 0, 437, 193,
	441, 0, 234, 430, 0, 0, 240, -2, 361, 0,
	0, 451, 195, 428, 199, 185, 0, 0, 0, 0,
	0, 513, 0, 512, 426, -2, 0, 394, 391, 395,
	384, 240, 0, 0, 419, 0, 0, 522, 526, 101,
	0, 97, 92, 0, 0, 0, 323, 106, 107, 0,
	431, 115, 0, 0, 132, 133, 127, 130, 126, 0,
	0, 0, 112, 0, 0, -2, 240, 0, -2, -2,
	0, 0, 0, 0, 434, 409, 411, 287, 0, 0,
	321, 0, 322, 324, 325, 327, 0, 0, 0, 0,
	0, 0, 0, 265, -2, 0, 147, 0, 0, 0,
	0, 456, 240, 45, 415, 469, 240, 219, 207, 0,
	268, 0, 180, 199, 435, 0, 195, 0, 0, 360,
	370, 311, 0, 0, 0, 452, 201, 200, 198, 396,
	0, 510, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 89, 90, 102, 103, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 119, 424, 32, 5,
	-2, 475, 0, 0, 0, -2, -2, 0, 0, 288,
	344, 0, 315, 0, 0, 0, 0, 0, 0, 344,
	344, 0, 344, 0, 289, 278, 0, 0, 148, 264,
	43, 0, -2, 416, 470, 0, 206, 205, 208, 270,
	274, 275, 201, 0, 439, 442, 440, 0, 0, 0,
	0, 219, 401, 397, 0, 0, 0, 510, 0, 399,
	0, 0, 0, 387, 234, 240, 0, 0, 420, -2,
	104, 105, 101, 0, 98, 93, 94, -2, -2, 344,
	0, 432, -2, 0, 128, 134, 131, 0, -2, 0,
	0, 459, 0, -2, 240, 0, 0, 0, 0, 223,
	0, 0, 342, 201, 0, 344, 0, 344, 344, 344,
	0, 344, 0, 201, 0, 0, 0, 0, 266, 0,
	44, 453, 204, 219, 0, 438, 371, 372, 311, 0,
	0, 181, 406, 0, 402, 398, 0, 404, 400, 0,
	388, 374, 311, 376, 311, 0, 449, 0, 0, 91,
	100, 0, 114, 0, 0, 54, 55, 0, 413, 68,
	69, 0, 61, -2, -2, 0, 0, 459, -2, 0,
	0, 476, -2, 33, 34, 0, 0, 0, 329, 341,
	0, 0, 0, 316, 0, 0, 0, 201, 0, 336,
	337, 344, 339, 344, 0, 454, 183, 436, 0, 0,
	445, 0, 0, 0, 403, 405, 0, 0, 447, 0,
	88, 332, 135, -2, 240, 0, 240, 252, 0, 0,
	-2, 0, 0, 0, 0, 0, 460, 240, 50, 473,
	35, 36, 0, 0, 345, 330, 331, 333, 334, 0,
	335, 0, 0, 280, 0, 373, 443, 0, 182, 407,
	375, 377, 0, 7, -2, 479, 0, -2, 0, 0,
	0, 0, 136, 137, -2, 48, 0, -2, 474, 0,
	224, 202, 328, 338, 340, 184, 0, 0, 450, 463,
	0, -2, 240, 0, 0, 63, 64, 0, 413, 73,
	74, 75, 0, 0, 0, 0, 0, 49, 457, 343,
	0, 0, 446, 448, 0, 463, -2, 0, 0, 480,
	-2, 0, -2, 240, 0, -2, -2, 0, 0, 138,
	458, 346, 0, 0, 0, 0, 444, 0, 0, 464,
	240, 67, 477, 56, 9, -2, 483, 0, 0, 0,
	-2, -2, 0, 0, 355, 0, 0, 348, 349, 350,
	65, 0, -2, 478, 0, 467, 0, -2, 240, 0,
	0, 0, 0, 0, 354, 351, 352, 353, 66, 461,
	0, 467, -2, 0, 0, 484, -2, 57, 58, 0,
	0, 347, 0, 357, 462, 0, 0, 468, 240, 72,
	481, 59, 60, 356, 70, 0, -2, 482, 0, 71,
	465, 466,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 171, 3, 3, 3, 170, 3, 3,
	172, 173, 168, 167, 174, 166, 175, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 164,
	3, 165,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:254
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:259
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:264
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:271
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:275
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:281
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:285
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:291
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:295
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:301
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:305
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:309
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:313
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:317
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:321
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:325
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:329
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:337
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:341
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:345
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:349
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:353
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:357
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:361
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:365
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:369
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:375
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:379
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:385
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:389
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:395
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:399
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:403
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:407
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:411
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:417
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:421
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:427
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:431
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:441
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:447
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:451
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:455
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:459
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:463
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:469
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:473
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:477
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:481
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:485
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:495
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:499
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:505
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:509
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:513
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:517
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:521
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:527
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:531
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:537
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:541
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:547
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:551
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:555
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:559
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:563
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:569
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:573
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:577
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:581
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:585
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:589
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:595
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:599
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:603
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:607
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:613
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:617
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:621
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:625
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:629
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:635
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:639
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:645
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Fields: yyDollar[6].queryexprs, IfNotExists: yyDollar[3].bool}
		}
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:649
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Fields: yyDollar[6].queryexprs, Query: yyDollar[9].queryexpr, IfNotExists: yyDollar[3].bool}
		}
	case 89:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:653
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Query: yyDollar[6].queryexpr, IfNotExists: yyDollar[3].bool}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:657
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:661
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:665
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:669
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:673
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:677
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:681
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:687
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:691
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:697
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:701
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:707
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:711
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:715
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:719
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:723
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:729
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:733
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:737
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:741
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:745
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:749
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:753
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:759
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:763
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:767
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:771
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:775
		{
			yyVAL.statement = DisposeView{View: Stdin{BaseExpr: NewBaseExpr(yyDollar[3].token)}}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:781
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:785
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:791
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:795
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:801
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:805
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:809
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:813
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:819
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:825
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:829
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:835
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:841
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:845
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:851
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:855
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:859
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:865
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:869
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:873
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 138:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:877
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:881
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:887
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:891
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:895
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:899
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:903
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:907
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:911
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:917
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:921
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:925
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:931
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:935
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:939
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:943
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:947
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:951
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:955
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:959
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:963
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:967
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:971
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:975
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:979
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:983
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:987
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:991
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:995
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:999
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1003
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1007
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1011
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1015
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1019
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1023
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1029
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1033
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1037
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1043
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
			}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1051
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
				Context:       yyDollar[5].token,
			}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1060
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1069
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 181:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1081
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
			}
		}
	case 182:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1096
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
				Context:       yyDollar[10].token,
			}
		}
	case 183:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1112
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 184:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:1128
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1147
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1157
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1166
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1175
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1186
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1190
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1196
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1202
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1208
		{
			yyVAL.queryexpr = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1212
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1218
		{
			yyVAL.queryexpr = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1222
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1228
		{
			yyVAL.queryexpr = nil
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1232
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1238
		{
			yyVAL.queryexpr = nil
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1242
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1248
		{
			yyVAL.queryexpr = nil
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1252
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1258
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 204:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1266
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1276
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1282
		{
			yyVAL.token = Token{}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1286
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1290
		{
			yyVAL.token = yyDollar[2].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1306
		{
			yyVAL.token = Token{}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1330
		{
			yyVAL.token = Token{}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1334
		{
			yyVAL.token = yyDollar[1].token
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1338
		{
			yyVAL.token = yyDollar[1].token
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1344
		{
			yyVAL.queryexpr = nil
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1348
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1354
		{
			yyVAL.queryexpr = nil
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1358
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1364
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1368
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1374
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1378
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1384
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1388
		{
			i, err := strconv.ParseInt(yyDollar[1].token.Literal, 10, 64)
			if err != nil {
				yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
			} else {
				iv := NewIntegerValue(i)
				iv.Literal = yyDollar[1].token.Literal
				yyVAL.queryexpr = iv
			}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1399
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1403
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1407
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1413
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1419
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1425
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1429
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1433
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1437
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1441
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1447
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1451
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1455
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1461
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1465
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1469
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1473
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1477
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1481
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1485
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1489
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1493
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1497
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1501
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1505
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1509
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1513
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1517
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1521
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1525
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1529
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1533
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1543
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1549
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1553
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1557
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1563
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1567
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1573
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1577
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1583
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1587
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1593
		{
			yyVAL.token = Token{}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1597
		{
			yyVAL.token = yyDollar[1].token
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1601
		{
			yyVAL.token = yyDollar[1].token
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1607
		{
			yyVAL.token = yyDollar[1].token
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1611
		{
			yyVAL.token = yyDollar[1].token
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1617
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1623
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1646
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1650
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 280:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1654
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1660
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1664
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1668
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1672
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1676
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1680
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1684
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1688
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 289:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1692
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1696
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1700
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1704
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1708
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1712
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1716
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1720
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1724
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1728
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1732
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1738
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1742
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1746
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1750
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1754
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1758
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1762
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1768
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1772
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1776
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1780
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1786
		{
			yyVAL.queryexprs = nil
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1790
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1796
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1800
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 315:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1804
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1808
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1812
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1816
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1820
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1824
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1831
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1835
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1839
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1843
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1847
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1851
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1857
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 328:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1861
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1867
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1871
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1875
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1879
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1883
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1887
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1891
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1895
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 337:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1899
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 338:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1903
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 339:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1907
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 340:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1911
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1917
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1923
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1927
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1933
		{
			yyVAL.queryexpr = nil
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1937
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1943
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1947
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1953
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1957
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1962
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1968
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1973
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1978
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1984
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1988
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1994
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1998
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2004
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2008
		{
			yyVAL.queryexpr = Url{BaseExpr: NewBaseExpr(yyDollar[1].token), Raw: yyDollar[1].token.Literal}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2012
		{
			yyVAL.queryexpr = TableFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2016
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2022
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2026
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2030
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2034
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2038
		{
			yyVAL.token = yyDollar[1].token
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2044
		{
			yyVAL.token = yyDollar[1].token
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2048
		{
			yyVAL.token = yyDollar[1].token
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2052
		{
			yyVAL.token = yyDollar[1].token
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2058
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2062
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2066
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2070
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2076
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 375:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2080
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2084
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 377:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2088
		{
			yyVAL.queryexpr = FormatSpecifiedFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2094
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2098
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2104
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2108
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2114
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2118
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2122
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2128
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2132
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2138
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2142
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2150
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2154
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2158
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2162
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2166
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2170
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2174
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2180
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2184
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2188
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2192
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2196
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2200
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 402:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2206
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2212
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2218
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2224
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2232
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2236
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2242
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2246
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2250
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2254
		{
			yyVAL.queryexpr = Field{Object: FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].queryexpr}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2260
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2266
		{
			yyVAL.queryexpr = nil
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2270
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2276
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2280
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2286
		{
			yyVAL.queryexpr = nil
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2290
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2296
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2300
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2306
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2310
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2316
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2320
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2326
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2330
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2336
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2340
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2346
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2350
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2356
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2360
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2366
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2370
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 435:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2376
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 436:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2380
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2384
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2388
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 439:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2394
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2400
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2406
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2410
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 443:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:2416
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 444:
		yyDollar = yyS[yypt-13 : yypt+1]
//line lib/parser/parser.y:2420
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 445:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2424
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 446:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2428
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 447:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2432
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 448:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2436
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2440
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 450:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:2444
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2450
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 452:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2454
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2460
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2464
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2470
		{
			yyVAL.elseexpr = Else{}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2474
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2480
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2484
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2490
		{
			yyVAL.elseexpr = Else{}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2494
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2500
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2504
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2510
		{
			yyVAL.elseexpr = Else{}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2514
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2520
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2524
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2530
		{
			yyVAL.elseexpr = Else{}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2534
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2540
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2544
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2550
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2554
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2560
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2564
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2570
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2574
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2580
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2584
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2590
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2594
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2600
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2604
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2610
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2614
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2620
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2624
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2628
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2632
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2636
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2640
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2644
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2648
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2652
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2658
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2664
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2668
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2674
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2680
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2684
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2690
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2694
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2700
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2706
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2712
		{
			items := strings.Split(yyDollar[1].token.Literal, ConstantDelimiter)
			space := ""
			if 0 < len(items) {
				space = items[0]
			}
			name := ""
			if 1 < len(items) {
				name = items[1]
			}

			yyVAL.queryexpr = Constant{BaseExpr: NewBaseExpr(yyDollar[1].token), Space: space, Name: name}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2728
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2734
		{
			yyVAL.token = Token{}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2738
		{
			yyVAL.token = yyDollar[1].token
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2744
		{
			yyVAL.token = Token{}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2748
		{
			yyVAL.token = yyDollar[1].token
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2754
		{
			yyVAL.token = Token{}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2758
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2764
		{
			yyVAL.token = Token{}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2768
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2774
		{
			yyVAL.token = yyDollar[1].token
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2778
		{
			yyVAL.token = yyDollar[1].token
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2782
		{
			yyVAL.token = yyDollar[1].token
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2788
		{
			yyVAL.token = Token{}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2792
		{
			yyVAL.token = yyDollar[1].token
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2798
		{
			yyVAL.token = Token{}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2802
		{
			yyVAL.token = yyDollar[1].token
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2808
		{
			yyVAL.token = Token{}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2812
		{
			yyVAL.token = yyDollar[1].token
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2818
		{
			yyVAL.token = yyDollar[1].token
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2822
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2829
		{
			yyVAL.bool = false
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2833
		{
			yyVAL.bool = true
		}
	}
	goto yystack /* stack new state and value */
}
